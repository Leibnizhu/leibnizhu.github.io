<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>大数据 on Heaven's Door</title><link>https://leibnizhu.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/</link><description>Recent content in 大数据 on Heaven's Door</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 20 Jun 2021 13:17:54 +0800</lastBuildDate><atom:link href="https://leibnizhu.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/index.xml" rel="self" type="application/rss+xml"/><item><title>修复Elasticsearch-hadoop查询条件带emoji时的JsonGenerationException</title><link>https://leibnizhu.github.io/p/%E4%BF%AE%E5%A4%8DElasticsearch-hadoop%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E5%B8%A6emoji%E6%97%B6%E7%9A%84JsonGenerationException/</link><pubDate>Sun, 20 Jun 2021 13:17:54 +0800</pubDate><guid>https://leibnizhu.github.io/p/%E4%BF%AE%E5%A4%8DElasticsearch-hadoop%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E5%B8%A6emoji%E6%97%B6%E7%9A%84JsonGenerationException/</guid><description>&lt;img src="https://leibnizhu.github.io/p/%E4%BF%AE%E5%A4%8DElasticsearch-hadoop%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E5%B8%A6emoji%E6%97%B6%E7%9A%84JsonGenerationException/bg1.png" alt="Featured image of post 修复Elasticsearch-hadoop查询条件带emoji时的JsonGenerationException" />&lt;h2 id="故障背景">故障背景&lt;/h2>
&lt;p>通过 &lt;a class="link" href="https://www.elastic.co/guide/en/elasticsearch/hadoop/current/spark.html" target="_blank" rel="noopener"
>ES-Hadoop&lt;/a> （亦可参考 &lt;a class="link" href="https://github.com/elastic/elasticsearch-hadoop" target="_blank" rel="noopener"
>Github&lt;/a> ） 查询ES时，若查询条件包含emoji，会在json序列化的时候抛出异常（在最新的 &lt;code>7.13.2&lt;/code> 版本仍存在）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Caused by: org.codehaus.jackson.JsonGenerationException: Incomplete surrogate pair: first char 0xde97, second 0x22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.codehaus.jackson.impl.JsonGeneratorBase._reportError&lt;span style="color:#5bc4bf">(&lt;/span>JsonGeneratorBase.java:480&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.codehaus.jackson.impl.Utf8Generator._decodeSurrogate&lt;span style="color:#5bc4bf">(&lt;/span>Utf8Generator.java:1708&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.codehaus.jackson.impl.Utf8Generator._outputSurrogates&lt;span style="color:#5bc4bf">(&lt;/span>Utf8Generator.java:1663&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.codehaus.jackson.impl.Utf8Generator._outputRawMultiByteChar&lt;span style="color:#5bc4bf">(&lt;/span>Utf8Generator.java:1649&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.codehaus.jackson.impl.Utf8Generator.writeRaw&lt;span style="color:#5bc4bf">(&lt;/span>Utf8Generator.java:757&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.codehaus.jackson.impl.Utf8Generator.writeRaw&lt;span style="color:#5bc4bf">(&lt;/span>Utf8Generator.java:697&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.elasticsearch.hadoop.serialization.json.JacksonJsonGenerator.writeRaw&lt;span style="color:#5bc4bf">(&lt;/span>JacksonJsonGenerator.java:252&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ... &lt;span style="color:#f99b15">21&lt;/span> more
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="故障根源分析">故障根源分析&lt;/h2>
&lt;p>根据报错的调用栈，直接原因出在 &lt;code>org.codehaus.jackson.impl.Utf8Generator#_decodeSurrogate&lt;/code> 方法中，其源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">protected&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> &lt;span style="color:#fec418">int&lt;/span> &lt;span style="color:#06b6ef">_decodeSurrogate&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">int&lt;/span> surr1&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span> surr2&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>surr2 &lt;span style="color:#5bc4bf">&amp;lt;&lt;/span> &lt;span style="color:#f99b15">56320&lt;/span> &lt;span style="color:#5bc4bf">||&lt;/span> surr2 &lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> &lt;span style="color:#f99b15">57343&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String msg &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;Incomplete surrogate pair: first char 0x&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> Integer&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">toHexString&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>surr1&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;, second 0x&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> Integer&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">toHexString&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>surr2&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">_reportError&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>msg&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">int&lt;/span> c &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#f99b15">65536&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>surr1 &lt;span style="color:#5bc4bf">-&lt;/span> &lt;span style="color:#48b685">&amp;#39;\ud800&amp;#39;&lt;/span> &lt;span style="color:#5bc4bf">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#f99b15">10&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>surr2 &lt;span style="color:#5bc4bf">-&lt;/span> &lt;span style="color:#48b685">&amp;#39;\udc00&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> c&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>是判断第二个字符在指定范围（&lt;code>[56320, 57343]&lt;/code> 区间）外就报这个错误。&lt;/p>
&lt;p>同时注意，这里用的是 &lt;code>org.codehaus&lt;/code> 的 &lt;code>jackson-core-asl&lt;/code> 依赖包，&lt;a class="link" href="https://github.com/FasterXML/jackson-docs/wiki/Presentation-Jackson-2.0" target="_blank" rel="noopener"
>众所周知&lt;/a> ，&lt;code>Jackson&lt;/code> 自2.x版本开始就迁移到 &lt;code>com.fasterxml&lt;/code> 下了，这个 &lt;code>org.codehaus&lt;/code> 的 &lt;code>jackson-core-asl&lt;/code> 是1.x版本的（Es-Spark通过打包时改第三方包名的方法将Jackson 打进其jar包中，具体参见 &lt;a class="link" href="https://github.com/elastic/elasticsearch-hadoop/blob/master/thirdparty/build.gradle" target="_blank" rel="noopener"
>build.gradle文件的relocate操作&lt;/a> ，实际版本为 &lt;a class="link" href="https://github.com/elastic/elasticsearch-hadoop/blob/master/gradle.properties" target="_blank" rel="noopener"
>1.8.8&lt;/a> ）。&lt;/p>
&lt;p>针对这个报错，可以查到是一个已经 &lt;a class="link" href="https://github.com/FasterXML/jackson-core/issues/115" target="_blank" rel="noopener"
>在2.3.0修复的bug&lt;/a> ，是旧版本不完全支持UTF-8的 &lt;code>surrogate pair&lt;/code> （这里又是一个兼容性的大坑，可以参见 &lt;a class="link" href="https://en.wikipedia.org/wiki/UTF-16#Code_points_from_U&amp;#43;010000_to_U&amp;#43;10FFFF" target="_blank" rel="noopener"
>维基百科&lt;/a> 的介绍）导致的。&lt;/p>
&lt;p>综上所述，Es-Spark 在执行查询的时候，&lt;code>org.elasticsearch.hadoop.rest.RestClient#searchRequest&lt;/code> 方法构建了 &lt;code>org.elasticsearch.hadoop.serialization.json.JacksonJsonGenerator&lt;/code> 实例，并将 &lt;code>QueryBuilder&lt;/code> 写入到 &lt;code>JacksonJsonGenerator&lt;/code> 中序列化成查询json，在这一步中由于使用了 Jackson 1.x 版本对UTF8的emoji支持不好，导致抛出 &lt;code>JsonGenerationException&lt;/code> 异常、中断查询。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">//RestClient 某查询方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>xxx &lt;span style="color:#06b6ef">queryXxx&lt;/span>&lt;span style="color:#5bc4bf">(......)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//......
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> Response response &lt;span style="color:#5bc4bf">=&lt;/span> execute&lt;span style="color:#5bc4bf">(&lt;/span>POST&lt;span style="color:#5bc4bf">,&lt;/span> uri&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">toString&lt;/span>&lt;span style="color:#5bc4bf">(),&lt;/span> searchRequest&lt;span style="color:#5bc4bf">(&lt;/span>query&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//......
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">static&lt;/span> BytesArray &lt;span style="color:#06b6ef">searchRequest&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>QueryBuilder query&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FastByteArrayOutputStream out &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> FastByteArrayOutputStream&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#f99b15">256&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JacksonJsonGenerator generator &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> JacksonJsonGenerator&lt;span style="color:#5bc4bf">(&lt;/span>out&lt;span style="color:#5bc4bf">);&lt;/span> &lt;span style="color:#776e71">//注意此处
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeBeginObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeFieldName&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;query&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeBeginObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">toJson&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>generator&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">finally&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">close&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> out&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">bytes&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>故障分析到这里，似乎只要升级 &lt;code>jackson-core&lt;/code> 版本就可以了……&lt;br>
然而上面提到，在 &lt;code>jackson-core 2.3.0&lt;/code> 才修复了这个问题，而 Es-Spark 使用的是内置的1.x 版本，前面也有提到 &lt;code>jackson-core&lt;/code> 自2.x开始迁移到 &lt;code>com.fasterxml&lt;/code> 。具体到代码，Es-spark 的 &lt;code>JacksonJsonGenerator&lt;/code> 是这样使用 &lt;code>jackson&lt;/code> 的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">package&lt;/span> &lt;span style="color:#fec418">org.elasticsearch.hadoop.serialization.json&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.codehaus.jackson.JsonEncoding&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.codehaus.jackson.JsonFactory&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.codehaus.jackson.JsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.elasticsearch.hadoop.serialization.Generator&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">JacksonJsonGenerator&lt;/span> &lt;span style="color:#815ba4">implements&lt;/span> Generator &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//省略部分字段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> JsonFactory JSON_FACTORY&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> JsonGenerator generator&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> OutputStream out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//省略部分代码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> JSON_FACTORY &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> JsonFactory&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSON_FACTORY&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">configure&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_FIELD_NAMES&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//RestClient 就是调用这个构造方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#06b6ef">JacksonJsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>OutputStream out&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// use dedicated method to lower Jackson requirement
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">generator&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> JSON_FACTORY&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">createJsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>out&lt;span style="color:#5bc4bf">,&lt;/span> JsonEncoding&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">UTF8&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>IOException ex&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">throw&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> EsHadoopSerializationException&lt;span style="color:#5bc4bf">(&lt;/span>ex&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也就是说，直接升级依赖版本是不行的，maven的GAV都变了，类名也变了，必须改代码。&lt;/p>
&lt;h3 id="同名类的patch">同名类的Patch&lt;/h3>
&lt;p>可以看到，虽说 &lt;code>Jackson&lt;/code> 迁移了包名，但如果是通过创建同名类的方式Patch，其实也很简单，只要把 &lt;code>JSON_FACTORY&lt;/code> 和 &lt;code>generator&lt;/code> 这个两个属性替换为 &lt;code>Jackson 2.3+&lt;/code> 版本的类、并微调静态代码块和构造方法里面的代码即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">package&lt;/span> &lt;span style="color:#fec418">org.elasticsearch.hadoop.serialization.json&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">com.fasterxml.jackson.core.JsonEncoding&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">com.fasterxml.jackson.core.JsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">com.fasterxml.jackson.core.JsonFactory&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.elasticsearch.hadoop.serialization.Generator&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">JacksonJsonGenerator&lt;/span> &lt;span style="color:#815ba4">implements&lt;/span> Generator &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//省略部分字段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> JsonFactory JSON_FACTORY&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> JsonGenerator generator&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> OutputStream out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//省略部分代码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> JSON_FACTORY &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> JsonFactory&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSON_FACTORY&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">configure&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_FIELD_NAMES&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#06b6ef">JacksonJsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>OutputStream out&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// use dedicated method to lower Jackson requirement
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">generator&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> JSON_FACTORY&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">createJsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>out&lt;span style="color:#5bc4bf">,&lt;/span> JsonEncoding&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">UTF8&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>IOException ex&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">throw&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> EsHadoopSerializationException&lt;span style="color:#5bc4bf">(&lt;/span>ex&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="javassist-patch">Javassist Patch&lt;/h3>
&lt;p>与上一篇博客一样，为了可维护性，最后还是选择使用 &lt;code>Javassist&lt;/code> 进行Patch。但受限于 &lt;code>Javassist&lt;/code> 的机制，这个Patch起来有点麻烦。&lt;br>
首先，阅读 &lt;code>JacksonJsonGenerator&lt;/code> 源码，它其实相当于是在 Es-spark 的 &lt;code>Generator&lt;/code> 接口与 &lt;code>jackson 1.8.8&lt;/code> 的 &lt;code>JsonGenerator&lt;/code> 之间做了Adaptor；因此可以考虑写一个 &lt;code>Generator&lt;/code> 接口与 &lt;code>jackson 2.3+&lt;/code> 之间的Adaptor给原调用者使用。&lt;br>
但阅读 Es-spark 的其他代码可以发现，虽然它定义了 &lt;code>Generator&lt;/code> 接口，但调用时都是直接面向 &lt;code>JacksonJsonGenerator&lt;/code> 实现类，如上面给出过的 &lt;code>RestClient#searchRequest&lt;/code> 的代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">//RestClient 某查询方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>&lt;span style="color:#815ba4">static&lt;/span> BytesArray &lt;span style="color:#06b6ef">searchRequest&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>QueryBuilder query&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//......
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> JacksonJsonGenerator generator &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> JacksonJsonGenerator&lt;span style="color:#5bc4bf">(&lt;/span>out&lt;span style="color:#5bc4bf">);&lt;/span> &lt;span style="color:#776e71">//注意此处
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">//......
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因此首先排除了通过修改 &lt;code>JacksonJsonGenerator&lt;/code> 调用者来Patch的方向，还是需要从 &lt;code>JacksonJsonGenerator&lt;/code> 内部入手。&lt;/p>
&lt;p>如果用&lt;code>javassist&lt;/code>修改&lt;code>JacksonJsonGenerator&lt;/code>，参考上一小节的内容，其实只要改俩成员变量的类型，再改改静态代码块即可。但真的如此吗？并不。写同名类能这样做到是因为会整个类重新编译，&lt;code>JacksonJsonGenerator&lt;/code>中大量delegate的方法在编译时是用 &lt;code>Jackson 2.3+&lt;/code> 的类进行连接的；然而&lt;code>javassist&lt;/code>修改成员变量的时候真的只是修改了成员变量本身，如果只改了这里，对应的delegate方法在运行时会找不到成员变量。&lt;/p>
&lt;p>如果是在静态代码块和构造方法新增 &lt;code>Jackson 2.3+&lt;/code> 对应的类，并给 &lt;code>writeRaw&lt;/code> 方法增加try-catch，在catch中使用 &lt;code>Jackson 2.3+&lt;/code> 对应的类进行json序列化呢？也不行。因为序列化是输出到&lt;code>OutputStream&lt;/code>（构造方法传入的那个），是有状态的，同时给&lt;code>jackson 1.8.8&lt;/code>和&lt;code>jackson 2.3+&lt;/code>持有并写入，恐怕会大乱（实测的确如此，不确定是不是没处理好&lt;code>flush&lt;/code>，但至少这个方案太危险）。&lt;/p>
&lt;p>还有一个方案是替换 &lt;code>JacksonJsonGenerator&lt;/code> 的 &lt;code>generator&lt;/code> 成员变量，可以做一个 &lt;code>org.codehaus.jackson.JsonGenerator&lt;/code> 与 &lt;code>Jackson 2.3+&lt;/code> 的 &lt;code>com.fasterxml.jackson.core.JsonGenerator&lt;/code> 之间的Adaptor来替换之。&lt;/p>
&lt;p>首先是Adaptor：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">package&lt;/span> &lt;span style="color:#fec418">xxx.yyy.zzz&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">com.fasterxml.jackson.core.JsonEncoding&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">com.fasterxml.jackson.core.JsonFactory&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">com.fasterxml.jackson.core.JsonGenerator&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.apache.commons.logging.LogFactory&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.codehaus.jackson.*&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.elasticsearch.hadoop.serialization.EsHadoopSerializationException&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">org.elasticsearch.hadoop.util.StringUtils&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">java.io.IOException&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">java.io.OutputStream&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">java.math.BigDecimal&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">java.math.BigInteger&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">java.util.Deque&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">import&lt;/span> &lt;span style="color:#fec418">java.util.LinkedList&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">JacksonJsonGeneratorAdaptor&lt;/span> &lt;span style="color:#815ba4">extends&lt;/span> org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">codehaus&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">jackson&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">JsonGenerator&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> &lt;span style="color:#fec418">boolean&lt;/span> HAS_UTF_8&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> JsonFactory JSON_FACTORY&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> JsonGenerator generator&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> OutputStream out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> Deque&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>String&lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> currentPath &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> LinkedList&lt;span style="color:#5bc4bf">&amp;lt;&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> String currentPathCached&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> String currentName&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">protected&lt;/span> ObjectCodec _objectCodec&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">boolean&lt;/span> hasMethod &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">false&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getMethod&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;writeUTF8String&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">byte&lt;/span>&lt;span style="color:#5bc4bf">[].&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hasMethod &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>NoSuchMethodException ignored&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HAS_UTF_8 &lt;span style="color:#5bc4bf">=&lt;/span> hasMethod&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(!&lt;/span>HAS_UTF_8&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LogFactory&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getLog&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JacksonJsonGeneratorAdaptor&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">warn&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;Old Jackson version (pre-1.7) detected; consider upgrading to improve performance&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSON_FACTORY &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> JsonFactory&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSON_FACTORY&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">configure&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_FIELD_NAMES&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#06b6ef">JacksonJsonGeneratorAdaptor&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>OutputStream out&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// use dedicated method to lower Jackson requirement
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">generator&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> JSON_FACTORY&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">createGenerator&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>out&lt;span style="color:#5bc4bf">,&lt;/span> JsonEncoding&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">UTF8&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>IOException ex&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">throw&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> EsHadoopSerializationException&lt;span style="color:#5bc4bf">(&lt;/span>ex&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//省略大量delegate方法，只列出不是简单delegate的
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">writeStartObject&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeStartObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>currentName &lt;span style="color:#5bc4bf">!=&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentPath&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">addLast&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>currentName&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentName &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentPathCached &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">writeEndObject&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentName &lt;span style="color:#5bc4bf">=&lt;/span> currentPath&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">pollLast&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentPathCached &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">writeFieldName&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>String name&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeFieldName&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>name&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentName &lt;span style="color:#5bc4bf">=&lt;/span> name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">writeUTF8String&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">byte&lt;/span>&lt;span style="color:#5bc4bf">[]&lt;/span> text&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span> offset&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span> len&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>HAS_UTF_8&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeUTF8String&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>text&lt;span style="color:#5bc4bf">,&lt;/span> offset&lt;span style="color:#5bc4bf">,&lt;/span> len&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">else&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeString&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">new&lt;/span> String&lt;span style="color:#5bc4bf">(&lt;/span>text&lt;span style="color:#5bc4bf">,&lt;/span> offset&lt;span style="color:#5bc4bf">,&lt;/span> len&lt;span style="color:#5bc4bf">,&lt;/span> StringUtils&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">UTF_8&lt;/span>&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">writeBinary&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>Base64Variant var1&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">byte&lt;/span>&lt;span style="color:#5bc4bf">[]&lt;/span> data&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span> offset&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">int&lt;/span> len&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeBinary&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>data&lt;span style="color:#5bc4bf">,&lt;/span> offset&lt;span style="color:#5bc4bf">,&lt;/span> len&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">writeBinary&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">byte&lt;/span>&lt;span style="color:#5bc4bf">[]&lt;/span> data&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> writeBinary&lt;span style="color:#5bc4bf">(&lt;/span>Base64Variants&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDefaultVariant&lt;/span>&lt;span style="color:#5bc4bf">(),&lt;/span> data&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#f99b15">0&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> data&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">length&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">copyCurrentEvent&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonParser jp&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JsonToken t &lt;span style="color:#5bc4bf">=&lt;/span> jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getCurrentToken&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>t &lt;span style="color:#5bc4bf">==&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">throw&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> JsonGenerationException&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;No current event to copy&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>t&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> START_OBJECT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeStartObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> END_OBJECT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> START_ARRAY&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeStartArray&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> END_ARRAY&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndArray&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> FIELD_NAME&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeFieldName&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getCurrentName&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_STRING&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">hasTextCharacters&lt;/span>&lt;span style="color:#5bc4bf">())&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeString&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getTextCharacters&lt;/span>&lt;span style="color:#5bc4bf">(),&lt;/span> jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getTextOffset&lt;/span>&lt;span style="color:#5bc4bf">(),&lt;/span> jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getTextLength&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">else&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeString&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getText&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_NUMBER_INT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getNumberType&lt;/span>&lt;span style="color:#5bc4bf">())&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> INT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNumber&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getIntValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> BIG_INTEGER&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNumber&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getBigIntegerValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNumber&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getLongValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_NUMBER_FLOAT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getNumberType&lt;/span>&lt;span style="color:#5bc4bf">())&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> BIG_DECIMAL&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNumber&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDecimalValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> FLOAT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNumber&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getFloatValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNumber&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDoubleValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_TRUE&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeBoolean&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_FALSE&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeBoolean&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">false&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_NULL&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeNull&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> VALUE_EMBEDDED_OBJECT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeObject&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getEmbeddedObject&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">throw&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> RuntimeException&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;Internal error: should never end up through this code path&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">copyCurrentStructure&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonParser jp&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">throws&lt;/span> IOException &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JsonToken t &lt;span style="color:#5bc4bf">=&lt;/span> jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getCurrentToken&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>t &lt;span style="color:#5bc4bf">==&lt;/span> JsonToken&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">FIELD_NAME&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeFieldName&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getCurrentName&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#5bc4bf">=&lt;/span> jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">nextToken&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>t&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> START_OBJECT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeStartObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">while&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">nextToken&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">!=&lt;/span> JsonToken&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">END_OBJECT&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">copyCurrentStructure&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndObject&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> START_ARRAY&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeStartArray&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">while&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">nextToken&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">!=&lt;/span> JsonToken&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">END_ARRAY&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">copyCurrentStructure&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">writeEndArray&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">copyCurrentEvent&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jp&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">close&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">close&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>IOException ex&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">throw&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> EsHadoopSerializationException&lt;span style="color:#5bc4bf">(&lt;/span>ex&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> Object &lt;span style="color:#06b6ef">getOutputTarget&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//return generator.getOutputTarget();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">return&lt;/span> out&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">codehaus&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">jackson&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">JsonGenerator&lt;/span> &lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>Feature feature&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>feature&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> AUTO_CLOSE_TARGET&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">AUTO_CLOSE_TARGET&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> AUTO_CLOSE_JSON_CONTENT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">AUTO_CLOSE_JSON_CONTENT&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> QUOTE_FIELD_NAMES&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_FIELD_NAMES&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> QUOTE_NON_NUMERIC_NUMBERS&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_NON_NUMERIC_NUMBERS&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> WRITE_NUMBERS_AS_STRINGS&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">WRITE_NUMBERS_AS_STRINGS&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> FLUSH_PASSED_TO_STREAM&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">FLUSH_PASSED_TO_STREAM&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> ESCAPE_NON_ASCII&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">enable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">ESCAPE_NON_ASCII&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">codehaus&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">jackson&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">JsonGenerator&lt;/span> &lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>Feature feature&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>feature&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> AUTO_CLOSE_TARGET&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">AUTO_CLOSE_TARGET&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> AUTO_CLOSE_JSON_CONTENT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">AUTO_CLOSE_JSON_CONTENT&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> QUOTE_FIELD_NAMES&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_FIELD_NAMES&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> QUOTE_NON_NUMERIC_NUMBERS&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_NON_NUMERIC_NUMBERS&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> WRITE_NUMBERS_AS_STRINGS&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">WRITE_NUMBERS_AS_STRINGS&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> FLUSH_PASSED_TO_STREAM&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">FLUSH_PASSED_TO_STREAM&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> ESCAPE_NON_ASCII&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">disable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">ESCAPE_NON_ASCII&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">break&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">boolean&lt;/span> &lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>Feature feature&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>feature&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> AUTO_CLOSE_TARGET&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">AUTO_CLOSE_TARGET&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> AUTO_CLOSE_JSON_CONTENT&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">AUTO_CLOSE_JSON_CONTENT&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> QUOTE_FIELD_NAMES&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_FIELD_NAMES&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> QUOTE_NON_NUMERIC_NUMBERS&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">QUOTE_NON_NUMERIC_NUMBERS&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> WRITE_NUMBERS_AS_STRINGS&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">WRITE_NUMBERS_AS_STRINGS&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> FLUSH_PASSED_TO_STREAM&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">FLUSH_PASSED_TO_STREAM&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> ESCAPE_NON_ASCII&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> generator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">isEnabled&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>JsonGenerator&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">Feature&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">ESCAPE_NON_ASCII&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">false&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">codehaus&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">jackson&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">JsonGenerator&lt;/span> &lt;span style="color:#06b6ef">setCodec&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>ObjectCodec objectCodec&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">_objectCodec&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> objectCodec&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> ObjectCodec &lt;span style="color:#06b6ef">getCodec&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">this&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">_objectCodec&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后通过&lt;code>javassist&lt;/code> 修改&lt;code>JacksonJsonGenerator&lt;/code> 的 &lt;code>generator&lt;/code> 成员变量实际取值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ClassPool pool &lt;span style="color:#5bc4bf">=&lt;/span> ClassPool&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDefault&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CtClass cc &lt;span style="color:#5bc4bf">=&lt;/span> pool&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;org.elasticsearch.hadoop.serialization.json.JacksonJsonGenerator&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span> &lt;span style="color:#776e71">//这里必须用类全限定名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//这里自己造了一个无参构造器给原构造器调用，否则 JacksonJsonGenerator 的 currentPath 一直是null（字段有初始化值但还是null），原因未知，可能是setBody影响了原构造器的行为
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> cc&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">addConstructor&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>CtNewConstructor&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">make&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;JacksonJsonGenerator(){this.currentPath = new java.util.LinkedList();}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> cc&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//构造函数将 generator 替换成我们的 Adaptor
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> CtConstructor jacksonJsonGeneratorConstructor &lt;span style="color:#5bc4bf">=&lt;/span> cc&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDeclaredConstructor&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">new&lt;/span> CtClass&lt;span style="color:#5bc4bf">[]{&lt;/span>pool&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>OutputStream&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getName&lt;/span>&lt;span style="color:#5bc4bf">())});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jacksonJsonGeneratorConstructor&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">setBody&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;{\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; this();\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#776e71">//调用无参构造器，这里用 $0() 是不行的，必须this();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#48b685">&amp;#34; try {\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; $0.out = $1;\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; $0.generator = new xxx.yyy.zzz.JacksonJsonGeneratorAdaptor($1);\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; } catch (java.io.IOException ex) {\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; throw new org.elasticsearch.hadoop.serialization.EsHadoopSerializationException(ex);\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; }\n&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34; }&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cc&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">toClass&lt;/span>&lt;span style="color:#5bc4bf">().&lt;/span>&lt;span style="color:#06b6ef">getConstructor&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>OutputStream&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">newInstance&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">info&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;完成对 JacksonJsonGenerator 进行静态代码块和构造方法的pack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>Exception e&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">error&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;给 JacksonJsonGenerator 进行静态代码块和构造方法的pack失败:&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> e&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getMessage&lt;/span>&lt;span style="color:#5bc4bf">(),&lt;/span> e&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完事儿。&lt;/p></description></item><item><title>修复Elasticsearch-hadoop读取特殊数字取值时的NumberFormatException</title><link>https://leibnizhu.github.io/p/%E4%BF%AE%E5%A4%8DElasticsearch-hadoop%E8%AF%BB%E5%8F%96%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E5%8F%96%E5%80%BC%E6%97%B6%E7%9A%84NumberFormatException/</link><pubDate>Sat, 19 Jun 2021 23:40:50 +0800</pubDate><guid>https://leibnizhu.github.io/p/%E4%BF%AE%E5%A4%8DElasticsearch-hadoop%E8%AF%BB%E5%8F%96%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E5%8F%96%E5%80%BC%E6%97%B6%E7%9A%84NumberFormatException/</guid><description>&lt;img src="https://leibnizhu.github.io/p/%E4%BF%AE%E5%A4%8DElasticsearch-hadoop%E8%AF%BB%E5%8F%96%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E5%8F%96%E5%80%BC%E6%97%B6%E7%9A%84NumberFormatException/bg2.jpg" alt="Featured image of post 修复Elasticsearch-hadoop读取特殊数字取值时的NumberFormatException" />&lt;h2 id="故障背景">故障背景&lt;/h2>
&lt;p>众所周知，&lt;code>Elasticsearch&lt;/code>（下文简称&lt;code>&amp;quot;ES&amp;quot;&lt;/code>）的数值类型字段是支持一些特殊格式的。比如，&lt;code>integer&lt;/code> 类型的字段取值可以是浮点数的字符串，如 &lt;code>&amp;quot;2.0&amp;quot;&lt;/code>；&lt;code>long&lt;/code> 类型的字段取值可以是科学计数法的字符串，如 &lt;code>&amp;quot;2E3&amp;quot;&lt;/code>，诸如此类的一些。不同于时间类型的字段可以 &lt;a class="link" href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html" target="_blank" rel="noopener"
>通过 &lt;code>mapping&lt;/code> 的 &lt;code>format&lt;/code> 属性配置取值格式&lt;/a> ，数值字段的取值没有格式的配置、上面举例的取值都是可以直接索引文档的。&lt;/p>
&lt;p>然而，通过 &lt;a class="link" href="https://www.elastic.co/guide/en/elasticsearch/hadoop/current/spark.html" target="_blank" rel="noopener"
>ES-Hadoop&lt;/a> （亦可参考 &lt;a class="link" href="https://github.com/elastic/elasticsearch-hadoop" target="_blank" rel="noopener"
>Github&lt;/a> ） 查询ES时，这些特殊格式的取值往往会导致报错，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>java.lang.NumberFormatException: For input string: &lt;span style="color:#48b685">&amp;#39;2E3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.lang.NumberFormatException.forInputString&lt;span style="color:#5bc4bf">(&lt;/span>NumberFormatException.java:65&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.lang.Long.parseLong&lt;span style="color:#5bc4bf">(&lt;/span>Long.java:441&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.lang.Long.parseLong&lt;span style="color:#5bc4bf">(&lt;/span>Long.java:483&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.elasticsearch.hadoop.serialization.builder.JdkValueReader.parseLong&lt;span style="color:#5bc4bf">(&lt;/span>JdkValueReader.java:296&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.elasticsearch.hadoop.serialization.builder.JdkValueReader.longValue&lt;span style="color:#5bc4bf">(&lt;/span>JdkValueReader.java:288&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>…………
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="故障根源分析">故障根源分析&lt;/h2>
&lt;p>阅读 &lt;code>JdkValueReader&lt;/code> 源码，以读取integer类型字段为例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">protected&lt;/span> Object &lt;span style="color:#06b6ef">intValue&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>String value&lt;span style="color:#5bc4bf">,&lt;/span> Parser parser&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer val &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>value &lt;span style="color:#5bc4bf">==&lt;/span> &lt;span style="color:#815ba4">null&lt;/span> &lt;span style="color:#5bc4bf">||&lt;/span> isEmpty&lt;span style="color:#5bc4bf">(&lt;/span>value&lt;span style="color:#5bc4bf">))&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> nullValue&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">else&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Token tk &lt;span style="color:#5bc4bf">=&lt;/span> parser&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">currentToken&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>tk &lt;span style="color:#5bc4bf">==&lt;/span> Token&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">VALUE_NUMBER&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> val &lt;span style="color:#5bc4bf">=&lt;/span> parser&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">intValue&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">else&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> val &lt;span style="color:#5bc4bf">=&lt;/span> parseInteger&lt;span style="color:#5bc4bf">(&lt;/span>value&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> processInteger&lt;span style="color:#5bc4bf">(&lt;/span>val&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">protected&lt;/span> Integer &lt;span style="color:#06b6ef">parseInteger&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>String value&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> Integer&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">parseInt&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>value&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到字段取值直接调用 &lt;code>Integer.parseInt&lt;/code> 方法解析，且没捕获异常。&lt;br>
不知道这样设计是处于什么考虑，但这个 &lt;code>NumberFormatException&lt;/code> 异常会打断读取的流程：出现一条有问题的数据时，会影响整个查询任务的执行，在 Es-spark 使用于离线批处理的场景，是不恰当的，所以有必要进行调整。&lt;/p>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;h3 id="自定义-valuereader">自定义 ValueReader&lt;/h3>
&lt;p>进一步阅读 ES-spark 源码可以发现，用户可以自己实现 &lt;code>org.elasticsearch.hadoop.serialization.builder.ValueReader&lt;/code> 接口，并通过 &lt;code>es.ser.reader.value.class&lt;/code> 配置项（常量&lt;code>org.elasticsearch.hadoop.cfg.ConfigurationOptions.ES_SERIALIZATION_READER_VALUE_CLASS&lt;/code>）配置自定义的 &lt;code>ValueReader&lt;/code> 实现，从而可以实现对这些特殊取值的读取解析。 当然，后来在 &lt;a class="link" href="https://www.elastic.co/guide/en/elasticsearch/hadoop/current/configuration.html" target="_blank" rel="noopener"
>官方文档&lt;/a> 中也印证了这一点。&lt;/p>
&lt;p>这样实际处理下来，基本是要拷贝 &lt;code>JdkValueReader&lt;/code> 源码进行修改作为自定义的 &lt;code>ValueReader&lt;/code> 实现；显然，这样就不能随 ES-spark 升级而自动升级对应实现，同时，在代码中，自定义的修改也和原 &lt;code>JdkValueReader&lt;/code> 的实现混杂在一起，给升级带来困难；因此考虑使用 &lt;code>Javassist&lt;/code> 进行patch。&lt;/p>
&lt;h3 id="javassist-patch">Javassist Patch&lt;/h3>
&lt;p>&lt;code>Javassist&lt;/code> 入门和介绍的文章在网上已经很多了，在此不再赘述。&lt;br>
列举一下patch过程中遇到的一些坑，或者说，&lt;code>Javassist&lt;/code> 的一些使用注意事项：&lt;/p>
&lt;ol>
&lt;li>不支持泛型，请自行强转；&lt;/li>
&lt;li>类要用全限定类名，没有import；&lt;/li>
&lt;li>$0=this, $1/$2/$3=方法的第1/2/3个参数；&lt;/li>
&lt;li>代码块前后要用{}包裹；&lt;/li>
&lt;li>不支持增强for、lambda等高级语法，需要手动转成基本语法。&lt;/li>
&lt;/ol>
&lt;p>最后给出针对Elasticsearch-hadoop读取特殊数字取值的 &lt;code>Javassist&lt;/code> patch代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ClassPool pool &lt;span style="color:#5bc4bf">=&lt;/span> ClassPool&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDefault&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">try&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//这里必须用类全限定名，而不是JdkValueReader.class.getName(),否则会先加载类，后面的修改就没用了
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> CtClass cc &lt;span style="color:#5bc4bf">=&lt;/span> pool&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;org.elasticsearch.hadoop.serialization.builder.JdkValueReader&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//修复 parseInteger 方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> CtMethod parseInteger &lt;span style="color:#5bc4bf">=&lt;/span> cc&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDeclaredMethod&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;parseInteger&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CtClass exceptionClass &lt;span style="color:#5bc4bf">=&lt;/span> pool&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>Exception&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getName&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String catchParseIntegerException &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;try{return new java.lang.Integer(java.lang.Double.valueOf($1).intValue());}catch(java.lang.Exception e){e.printStackTrace();return null;}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parseInteger&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">addCatch&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;{&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> catchParseIntegerException &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> exceptionClass&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//修复 parseLong 方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> CtMethod parseLong &lt;span style="color:#5bc4bf">=&lt;/span> cc&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDeclaredMethod&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;parseLong&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String catchParseLongExpSrc &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;try{return new java.lang.Long(java.lang.Double.valueOf($1).longValue());}catch(java.lang.Exception e){e.printStackTrace();return null;}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parseLong&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">addCatch&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;{&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> catchParseLongExpSrc &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> exceptionClass&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cc&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">toClass&lt;/span>&lt;span style="color:#5bc4bf">().&lt;/span>&lt;span style="color:#06b6ef">newInstance&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">info&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;完成对 JdkValueReader 进行 parseInteger() 和 parseLong() 的pack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span> &lt;span style="color:#815ba4">catch&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>Exception e&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">error&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;给 JdkValueReader 进行 parseInteger() 和 parseLong() 的pack失败:&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> e&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getMessage&lt;/span>&lt;span style="color:#5bc4bf">(),&lt;/span> e&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在此基础上还可以做成按配置动态patch等骚操作。最后编译运行，Pass。&lt;/p></description></item><item><title>Kerberos集群的Sqoop,Hive,HBase,Kafka,Maxwell使用</title><link>https://leibnizhu.github.io/p/Kerberos%E9%9B%86%E7%BE%A4%E7%9A%84SqoopHiveHBaseKafkaMaxwell%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 07 Mar 2018 16:23:56 +0800</pubDate><guid>https://leibnizhu.github.io/p/Kerberos%E9%9B%86%E7%BE%A4%E7%9A%84SqoopHiveHBaseKafkaMaxwell%E4%BD%BF%E7%94%A8/</guid><description>&lt;img src="https://leibnizhu.github.io/p/Kerberos%E9%9B%86%E7%BE%A4%E7%9A%84SqoopHiveHBaseKafkaMaxwell%E4%BD%BF%E7%94%A8/flower.jpg" alt="Featured image of post Kerberos集群的Sqoop,Hive,HBase,Kafka,Maxwell使用" />&lt;p>介绍在部署了Kerberos的安全Hadoop集群中, Sqoop,Hive,HBase,Kafka,Maxwell使用方法.&lt;/p>
&lt;h2 id="sqoop使用">Sqoop使用&lt;/h2>
&lt;p>配置好Kerberos之后, sqoop不能直接使用, 需要进行一些配置:&lt;/p>
&lt;ol>
&lt;li>分配sqoop的组, 执行&lt;code>usermod -a -G hdfs sqoop&lt;/code>加入到hdfs组, 使用&lt;code>groups sqoop&lt;/code>确认执行成功;&lt;/li>
&lt;li>进入Hue的用户管理界面, 新增sqoop用户, 在hdfs用户组中;&lt;/li>
&lt;li>在Hue的HDFS文件管理页面中, 创建/user/sqoop目录, 从属于sqoop:hdfs用户/用户组;&lt;/li>
&lt;li>进入cdh1, 创建Kerberos用户, 名为sqoop, 可以导出keytab;&lt;/li>
&lt;li>使用kinit命令切换到sqoop用户(在脚本中可以使用keytab切换)&lt;/li>
&lt;li>执行sqoop命令&lt;/li>
&lt;/ol>
&lt;h2 id="spark访问hbase">Spark访问HBase&lt;/h2>
&lt;ol>
&lt;li>进入cdh1, 创建Kerberos用户, 名为hbase; 导出keytab, 名为hbase.keytab, 保存到本地;&lt;/li>
&lt;li>下载krb5.conf到本地.&lt;/li>
&lt;li>创建测试类, 并执行, 代码如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-scala" data-lang="scala">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">/*HBase测试*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">object&lt;/span> &lt;span style="color:#fec418">KerberosHBaseTest&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">def&lt;/span> main&lt;span style="color:#5bc4bf">(&lt;/span>args&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">Array&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">String&lt;/span>&lt;span style="color:#5bc4bf">])&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> zkHosts &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;cdh2:2181,cdh3:2181,cdh4:2181&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">System&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>setProperty&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;java.security.krb5.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/path/to/krb5.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//krb5.conf本地路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> sparkConf &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">SparkConf&lt;/span>&lt;span style="color:#5bc4bf">().&lt;/span>setAppName&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;KerberosHBaseTest&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>setMaster&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> sc &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">SparkContext&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>sparkConf&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//配置HBase连接
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> hbaseConfig &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#fec418">HBaseConfiguration&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>create&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hbaseConfig&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hbase.zookeeper.quorum&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> zkHosts&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hbaseConfig&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;zookeeper.znode.parent&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/hbase&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//设置集群和hbase的安全模式为kerberos
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> hbaseConfig&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hadoop.security.authentication&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;kerberos&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hbaseConfig&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hbase.security.authentication&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;kerberos&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hbaseConfig&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hbase.master.kerberos.principal&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;hbase/_HOST@TURINGDI.COM&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//没有似乎也行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> hbaseConfig&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hbase.regionserver.kerberos.principal&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;hbase/_HOST@TURINGDI.COM&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//必须有
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#fec418">UserGroupInformation&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>setConfiguration&lt;span style="color:#5bc4bf">(&lt;/span>hbaseConfig&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">UserGroupInformation&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>loginUserFromKeytab&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hbase&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/path/to/hbase.keytab&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//Kerberos用户名, keytab本地路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">//设置广播变量，解决序列化问题
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">//HBase配置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> broadcastHBaseConf &lt;span style="color:#815ba4">=&lt;/span> sc&lt;span style="color:#5bc4bf">.&lt;/span>broadcast&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">SerializableWritable&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>hbaseConfig&lt;span style="color:#5bc4bf">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//HBase连接工具类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> hbaseConnection &lt;span style="color:#815ba4">=&lt;/span> sc&lt;span style="color:#5bc4bf">.&lt;/span>broadcast&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">HBaseConnection&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>broadcastHBaseConf&lt;span style="color:#5bc4bf">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> result &lt;span style="color:#815ba4">=&lt;/span> scanByStartTimestamp&lt;span style="color:#5bc4bf">(&lt;/span>hbaseConnection&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;t1&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#f99b15">0L&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#5bc4bf">.&lt;/span>foreach&lt;span style="color:#5bc4bf">(&lt;/span>r &lt;span style="color:#815ba4">=&amp;gt;&lt;/span> println&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">ConvertService&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>convertResultToHBaseRow&lt;span style="color:#5bc4bf">(&lt;/span>r&lt;span style="color:#5bc4bf">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sc&lt;span style="color:#5bc4bf">.&lt;/span>stop&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> * 从HBase中scan指定表的所有列，从指定的时间戳开始
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> * @param hBaseConnection HBase连接
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> * @param tableName 表名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> * @param starTimestamp 开始scan的时间戳，从该时间戳scan到当前时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> * @return scan的结果，Result的List
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> * @author Leibniz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">def&lt;/span> scanByStartTimestamp&lt;span style="color:#5bc4bf">(&lt;/span>hBaseConnection&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">Broadcast&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">HBaseConnection&lt;/span>&lt;span style="color:#5bc4bf">],&lt;/span> tableName&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">String&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> starTimestamp&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">Long&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">ArrayBuffer&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">Result&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> resultList &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">ArrayBuffer&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">Result&lt;/span>&lt;span style="color:#5bc4bf">]()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">Try&lt;/span>&lt;span style="color:#5bc4bf">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> scan &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">Scan&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scan&lt;span style="color:#5bc4bf">.&lt;/span>setTimeRange&lt;span style="color:#5bc4bf">(&lt;/span>starTimestamp&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">System&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>currentTimeMillis&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// 获取表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> table &lt;span style="color:#815ba4">=&lt;/span> hBaseConnection&lt;span style="color:#5bc4bf">.&lt;/span>value&lt;span style="color:#5bc4bf">.&lt;/span>connection&lt;span style="color:#5bc4bf">.&lt;/span>getTable&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">TableName&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>valueOf&lt;span style="color:#5bc4bf">(&lt;/span>tableName&lt;span style="color:#5bc4bf">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table&lt;span style="color:#5bc4bf">.&lt;/span>getScanner&lt;span style="color:#5bc4bf">(&lt;/span>scan&lt;span style="color:#5bc4bf">).&lt;/span>foreach&lt;span style="color:#5bc4bf">(&lt;/span>resultList&lt;span style="color:#5bc4bf">.+=)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}).&lt;/span>recover&lt;span style="color:#5bc4bf">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">case&lt;/span> e&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">Throwable&lt;/span> &lt;span style="color:#5bc4bf">=&amp;gt;&lt;/span> log&lt;span style="color:#5bc4bf">.&lt;/span>error&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;从HBase表{}中按时间戳({}-&amp;gt;NOW)scan时抛出异常:{}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">Seq&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">AnyRef&lt;/span>&lt;span style="color:#5bc4bf">](&lt;/span>tableName&lt;span style="color:#5bc4bf">,&lt;/span> starTimestamp&lt;span style="color:#5bc4bf">.&lt;/span>toString&lt;span style="color:#5bc4bf">,&lt;/span> e&lt;span style="color:#5bc4bf">.&lt;/span>getMessage&lt;span style="color:#5bc4bf">)&lt;/span>&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#815ba4">_&lt;/span>&lt;span style="color:#fec418">*&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultList
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="spark访问hive">Spark访问Hive&lt;/h2>
&lt;ol>
&lt;li>Hive可以沿用hbase的Kerberos用户, 也可以新建一个Hive用户及其对应keytab文件.&lt;/li>
&lt;li>本地测试请将集群的&lt;code>hive-site.xml&lt;/code>导出并保存在项目的&lt;code>src/main/resources/&lt;/code>目录下;&lt;/li>
&lt;li>编写Spark测试程序:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-scala" data-lang="scala">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">/*Hive测试*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">object&lt;/span> &lt;span style="color:#fec418">KerberosHiveTest&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">def&lt;/span> main&lt;span style="color:#5bc4bf">(&lt;/span>args&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">Array&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">String&lt;/span>&lt;span style="color:#5bc4bf">])&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">System&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>setProperty&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;java.security.krb5.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/path/to/krb5.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//krb5.conf本地路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> sparkConf &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">SparkConf&lt;/span>&lt;span style="color:#5bc4bf">().&lt;/span>setAppName&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;KerberosHiveTest&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>setMaster&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> sc &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">SparkContext&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>sparkConf&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> config &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#fec418">HBaseConfiguration&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>create&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config&lt;span style="color:#5bc4bf">.&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hadoop.security.authentication&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;kerberos&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//必须有
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#fec418">UserGroupInformation&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>setConfiguration&lt;span style="color:#5bc4bf">(&lt;/span>config&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">UserGroupInformation&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>loginUserFromKeytab&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;hbase&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/path/to/hbase.keytab&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//Kerberos用户名, keytab本地路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> sparkSession &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#fec418">SparkSession&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>builder&lt;span style="color:#5bc4bf">.&lt;/span>master&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>appName&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;KerberosHiveTest&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>enableHiveSupport&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">.&lt;/span>config&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;yarn.resourcemanager.principal&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;rm/_HOST@TURINGDI.COM&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//必须有
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// .config(&amp;#34;spark.yarn.keytab&amp;#34;, &amp;#34;/path/to/hbase.keytab&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// .config(&amp;#34;spark.yarn.principal&amp;#34;, &amp;#34;hbase@TURINGDI.COM&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">.&lt;/span>getOrCreate&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> dataFrame &lt;span style="color:#815ba4">=&lt;/span> sparkSession&lt;span style="color:#5bc4bf">.&lt;/span>sql&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;select * from hivetest2&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dataFrame&lt;span style="color:#5bc4bf">.&lt;/span>rdd&lt;span style="color:#5bc4bf">.&lt;/span>foreach&lt;span style="color:#5bc4bf">(&lt;/span>row &lt;span style="color:#815ba4">=&amp;gt;&lt;/span> println&lt;span style="color:#5bc4bf">(&lt;/span>row&lt;span style="color:#5bc4bf">.&lt;/span>getInt&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#f99b15">0&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34; -&amp;gt; &amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> row&lt;span style="color:#5bc4bf">.&lt;/span>getString&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sc&lt;span style="color:#5bc4bf">.&lt;/span>stop&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="spark访问kafka">Spark访问Kafka&lt;/h2>
&lt;ol>
&lt;li>进入Cloudera Manager的Kafka配置页面, 搜索&amp;rsquo;Inter Broker Protocol&amp;rsquo;, 更改为&amp;rsquo;SASL_PLAINTEXT';&lt;/li>
&lt;li>重启Kafka配置;&lt;/li>
&lt;li>进入cdh1, 创建Kerberos用户, 名为kafka; 导出keytab, 名为kafka.keytab, 并保存到本地(测试用);&lt;/li>
&lt;li>cdh1中新建一个jaas.conf配置文件, 并复制到本地(注意修改keyTab), 内容如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>KafkaClient &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.sun.security.auth.module.Krb5LoginModule required
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">doNotPrompt&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">useTicketCache&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">useKeyTab&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">principal&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>&lt;span style="color:#48b685">&amp;#34;kafka@TURINGDI.COM&amp;#34;&lt;/span> &lt;span style="color:#776e71">#根据实际修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">serviceName&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>&lt;span style="color:#48b685">&amp;#34;kafka&amp;#34;&lt;/span> &lt;span style="color:#776e71">## 固定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">client&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">keyTab&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>&lt;span style="color:#48b685">&amp;#34;/path/to/kafka.keytab&amp;#34;&lt;/span>; &lt;span style="color:#776e71">## keytab路径,节点和本地按实际路径填写&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>cdh1中新建一个kafka.properties文件, 内容如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>security.protocol=SASL_PLAINTEXT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sasl.kerberos.service.name=kafka
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sasl.mechanism=GSSAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>security.inter.broker.protocol=SASL_PLAINTEXT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>编写Spark程序进行测试:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-scala" data-lang="scala">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">object&lt;/span> &lt;span style="color:#fec418">KerberosKafkaTest&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">def&lt;/span> main&lt;span style="color:#5bc4bf">(&lt;/span>args&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">Array&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">String&lt;/span>&lt;span style="color:#5bc4bf">])&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> zkHosts &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;cdh2:2181,cdh3:2181,cdh4:2181&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> kafkaBrokers &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;cdh2:9092,cdh3:9092,cdh4:9092&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> topics &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#fec418">List&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;maxwell&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fec418">System&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>setProperty&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;java.security.krb5.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/path/to/krb5.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//本地krb5.conf路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#fec418">System&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>setProperty&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;java.security.auth.login.config&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;/path/to/jaas.conf&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>&lt;span style="color:#776e71">//本地jaas.conf路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// 创建流处理上下文，并以启动参数指定的秒数为时间间隔做一次批处理。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> sparkConf &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">SparkConf&lt;/span>&lt;span style="color:#5bc4bf">().&lt;/span>setAppName&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;KerberosKafkaTest&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>set&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;spark.streaming.kafka.consumer.poll.ms&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">KAFKA_CONSUMER_POLL_MS&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>setMaster&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">val&lt;/span> ssc &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> &lt;span style="color:#fec418">StreamingContext&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>sparkConf&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">Seconds&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#f99b15">10&lt;/span>&lt;span style="color:#5bc4bf">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// 配置并创建Kafka输入流
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// 如果zookeeper没有offset值或offset值超出范围，就给个初始的offset
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// 有earliest、largest可选，分别表示给当前最小的offset、当前最大的offset。默认largest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> kafkaParams &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#fec418">Map&lt;/span>&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">String&lt;/span>, &lt;span style="color:#fec418">Object&lt;/span>&lt;span style="color:#5bc4bf">](&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34;auto.offset.reset&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#48b685">&amp;#34;earliest&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34;bootstrap.servers&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> kafkaBrokers&lt;span style="color:#5bc4bf">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34;group.id&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#48b685">&amp;#34;testGroup&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34;enable.auto.commit&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">false&lt;/span>&lt;span style="color:#815ba4">:&lt;/span> &lt;span style="color:#fec418">java.lang.Boolean&lt;/span>&lt;span style="color:#5bc4bf">),&lt;/span> &lt;span style="color:#776e71">//禁用自动提交Offset，否则可能没正常消费完就提交了，造成数据错误
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#48b685">&amp;#34;key.deserializer&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> classOf&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">StringDeserializer&lt;/span>&lt;span style="color:#5bc4bf">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34;value.deserializer&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> classOf&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#fec418">StringDeserializer&lt;/span>&lt;span style="color:#5bc4bf">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#48b685">&amp;#34;sasl.kerberos.service.name&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#48b685">&amp;#34;kafka&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#776e71">//必须有
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#48b685">&amp;#34;security.protocol&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#48b685">&amp;#34;SASL_PLAINTEXT&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#776e71">//与Kafka配置一致
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">val&lt;/span> kafkaStream &lt;span style="color:#815ba4">=&lt;/span> &lt;span style="color:#fec418">KafkaUtils&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>createDirectStream&lt;span style="color:#5bc4bf">(&lt;/span>ssc&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">PreferConsistent&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#fec418">ConsumerStrategies&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#fec418">Subscribe&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>topics&lt;span style="color:#5bc4bf">,&lt;/span> kafkaParams&lt;span style="color:#5bc4bf">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kafkaStream&lt;span style="color:#5bc4bf">.&lt;/span>foreachRDD&lt;span style="color:#5bc4bf">(&lt;/span>rdd &lt;span style="color:#815ba4">=&amp;gt;&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#5bc4bf">.&lt;/span>info&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;接收到{}条Kafka消息&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> rdd&lt;span style="color:#5bc4bf">.&lt;/span>count&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rdd&lt;span style="color:#5bc4bf">.&lt;/span>foreach&lt;span style="color:#5bc4bf">(&lt;/span>message &lt;span style="color:#815ba4">=&amp;gt;&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;partition=&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> message&lt;span style="color:#5bc4bf">.&lt;/span>partition &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;, value=&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> message&lt;span style="color:#5bc4bf">.&lt;/span>value &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;, offset=&amp;#34;&lt;/span> &lt;span style="color:#5bc4bf">+&lt;/span> message&lt;span style="color:#5bc4bf">.&lt;/span>offset&lt;span style="color:#5bc4bf">.&lt;/span>toString&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssc&lt;span style="color:#5bc4bf">.&lt;/span>start&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssc&lt;span style="color:#5bc4bf">.&lt;/span>awaitTermination&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>kafka自带的命令, 如kafka-console-consumer, kafka-topics还不能使用, 若要使用, 需要先执行:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#ef6155">KAFKA_OPTS&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span>&lt;span style="color:#48b685">&amp;#34;-Djava.security.krb5.conf=/etc/krb5.conf -Djava.security.auth.login.config=/path/to/jaas.conf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意修改其中的jass.conf路径, 并确保其中配置的keytab存在; 再执行相应的kafka命令.&lt;br>
如果觉得麻烦, 也可以编辑&lt;code>/opt/cloudera/parcels/KAFKA-3.0.0-1.3.0.0.p0.40/lib/kafka/bin/kafka-run-class.sh&lt;/code>, 在&lt;code>exec $JAVA&lt;/code>后面增加:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-Djava.security.krb5.conf&lt;span style="color:#5bc4bf">=&lt;/span>/etc/krb5.conf -Djava.security.auth.login.config&lt;span style="color:#5bc4bf">=&lt;/span>/root/jaas.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="maxwell配置">Maxwell配置&lt;/h2>
&lt;ol>
&lt;li>编辑${MAXWELL_HOME}/bin/maxwell, 在文件尾部附件的&lt;code>exec $JAVA $JAVA_OPTS&lt;/code>后面增加:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-Djava.security.krb5.conf&lt;span style="color:#5bc4bf">=&lt;/span>/etc/krb5.conf -Djava.security.auth.login.config&lt;span style="color:#5bc4bf">=&lt;/span>/root/jaas.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>编辑一个config.properties文件, 内容如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>kafka.security.protocol=SASL_PLAINTEXT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kafka.sasl.kerberos.service.name=kafka
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kafka.sasl.mechanism=GSSAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>security.inter.broker.protocol=SASL_PLAINTEXT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sasl.mechanism.inter.broker.protocol=PLAIN
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>在maxwell启动命令中增加参数:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>--config /path/to/config.properties
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kerberos部署,配置与基础使用</title><link>https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 07 Mar 2018 16:23:33 +0800</pubDate><guid>https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</guid><description>&lt;img src="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/room.jpg" alt="Featured image of post Kerberos部署,配置与基础使用" />&lt;p>下文以本地测试集群为例, 4节点(cdh1-4), cdh1为NameNode, cdh2-4为DataNode.&lt;/p>
&lt;h2 id="基础概念">基础概念&lt;/h2>
&lt;p>Kerberos principal用于在kerberos加密系统中标记一个唯一的身份。&lt;br>
kerberos为kerberos principal分配tickets使其可以访问由kerberos加密的hadoop服务。&lt;br>
对于hadoop，principals的格式为username/fully.qualified.domain.name@YOUR-REALM.COM.&lt;br>
keytab是包含principals和加密principal key的文件。&lt;br>
keytab文件对于每个host是唯一的，因为key中包含hostname。keytab文件用于不需要人工交互和保存纯文本密码，实现到kerberos上验证一个主机上的principal。&lt;br>
因为服务器上可以访问keytab文件即可以以principal的身份通过kerberos的认证，所以，keytab文件应该被妥善保存，应该只有少数的用户可以访问。&lt;/p>
&lt;h2 id="kdc服务安装及配置">KDC服务安装及配置&lt;/h2>
&lt;h3 id="安装kdc服务">安装KDC服务&lt;/h3>
&lt;p>选择NameNode节点(cdh1)安装KDC服务, 执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>yum -y install krb5-server krb5-libs krb5-auth-dialog krb5-workstation openldap-clients
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其他节点(cdh2-4)只安装Kerberos客户端, 执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>yum -y install krb5-libs krb5-workstation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置kdc服务">配置KDC服务&lt;/h3>
&lt;p>1.编辑/etc/krb5.conf:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">## Configuration snippets may be placed in this directory as well&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>includedir /etc/krb5.conf.d/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">[&lt;/span>logging&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">default&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> FILE:/var/log/krb5libs.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">kdc&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> FILE:/var/log/krb5kdc.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">admin_server&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> FILE:/var/log/kadmind.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">[&lt;/span>libdefaults&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">dns_lookup_realm&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">dns_lookup_kdc&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">ticket_lifetime&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> 24h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">renew_lifetime&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> 7d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">forwardable&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">#rdns = false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef6155">default_realm&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> TURINGDI.COM &lt;span style="color:#776e71">#随意定义一个域&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">#default_ccache_name = KEYRING:persistent:%{uid}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">[&lt;/span>realms&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">#与上面default_realm一致, 配置KDC服务所在的服务器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TURINGDI.COM &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">kdc&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> cdh1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">admin_server&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> cdh1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">[&lt;/span>domain_realm&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.turingdi.com &lt;span style="color:#5bc4bf">=&lt;/span> TURINGDI.COM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>turingdi.com &lt;span style="color:#5bc4bf">=&lt;/span> TURINGDI.COM
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.将/etc/krb5.conf复制到每个节点的/etc/目录下.&lt;br>
3.修改/var/kerberos/krb5kdc/kadm5.acl, 配置用户名包含/admin的用户都是管理员用户:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>*/admin@TURINGDI.COM *
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4.修改修改/var/kerberos/krb5kdc/kdc.conf, 配置令牌的生命周期, 并设置默认允许重新生成令牌:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">[&lt;/span>kdcdefaults&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">kdc_ports&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#f99b15">88&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">kdc_tcp_ports&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#f99b15">88&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">[&lt;/span>realms&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TURINGDI.COM &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">#master_key_type = aes256-cts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">max_renewable_life&lt;/span>&lt;span style="color:#5bc4bf">=&lt;/span> 7d 0h 0m 0s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">default_principal_flags&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> +renewable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">acl_file&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> /var/kerberos/krb5kdc/kadm5.acl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">dict_file&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> /usr/share/dict/words
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">admin_keytab&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> /var/kerberos/krb5kdc/kadm5.keytab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef6155">supported_enctypes&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> aes256-cts:normal aes128-cts:normal des3-hmac-sha1:normal arcfour-hmac:normal camellia256-cts:normal camellia128-cts:normal des-hmac-sha1:normal des-cbc-md5:normal des-cbc-crc:normal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建kerberos数据库">创建Kerberos数据库&lt;/h3>
&lt;p>在cdh1执行以下命令, 注意域名:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kdb5_util create –r TURINGDI.COM -s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>按提示设置密码并重复密码.&lt;/p>
&lt;h3 id="创建kerberos的管理账号">创建Kerberos的管理账号&lt;/h3>
&lt;p>在cdh1执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kadmin.local
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>依次输入:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>addprinc admin/admin@TURINGDI.COM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">## 按提示设置管理账号的密码并重复密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置服务自启动">配置服务自启动&lt;/h3>
&lt;p>在cdh1执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chkconfig krb5kdc on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hkconfig kadmin on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>service krb5kdc start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>service kadmin start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后尝试登陆Kerberos的管理员账号:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kinit admin/admin@TURINGDI.COM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">## 3. 输入刚才设定的管理账号密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>klist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>应该会输出类似:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Ticket cache: FILE:/tmp/krb5cc_0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Default principal: admin/admin@TURINGDI.COM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Valid starting Expires Service principal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2018-03-06T16:48:23 2018-03-07T16:48:23 krbtgt/TURINGDI.COM@TURINGDI.COM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> renew &lt;span style="color:#815ba4">until&lt;/span> 2018-03-13T16:48:23
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>即配置成功.&lt;/p>
&lt;h2 id="cdh集群启用kerberos">CDH集群启用Kerberos&lt;/h2>
&lt;ol>
&lt;li>进入Cloudera Manager的“管理”-&amp;gt; “安全”界面:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/security.png"
width="1544"
height="360"
srcset="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/security_huf4677ec2483774f32c9e9eb7c2f66152_14138_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/security_huf4677ec2483774f32c9e9eb7c2f66152_14138_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="428"
data-flex-basis="1029px"
>&lt;/li>
&lt;li>点击&amp;quot;启用Kerberos&amp;quot;按钮, 确保列出的所有检查项都已完成并勾选, 点击&amp;quot;继续&amp;quot;按钮:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/keberosList.png"
width="1268"
height="926"
srcset="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/keberosList_hud19fe07c80291333b2cbcc5eb0726cd4_22242_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/keberosList_hud19fe07c80291333b2cbcc5eb0726cd4_22242_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="136"
data-flex-basis="328px"
>&lt;/li>
&lt;li>配置相关的KDC信息，包括类型、KDC服务器、KDC Realm、加密类型以及待创建的Service Principal（hdfs，yarn,，hbase，hive等）的更新生命期等, 与/etc/krb5.conf的配置一致, 点击&amp;quot;继续&amp;quot;按钮.&lt;/li>
&lt;li>取消勾选&amp;quot;通过Cloudera Manager管理krb5.conf&amp;quot;, 点击&amp;quot;继续&amp;quot;按钮.&lt;/li>
&lt;li>输入Cloudera Manager的Kerbers管理员账号，必须和之前创建的账号一致，点击&amp;quot;继续&amp;quot;.&lt;/li>
&lt;li>最后点击&amp;quot;继续&amp;quot;, 勾选重启集群, 点击&amp;quot;继续&amp;quot;按钮, 等待配置重启集群.&lt;/li>
&lt;/ol>
&lt;h2 id="aes-256加密与jce">AES-256加密与JCE&lt;/h2>
&lt;p>对于使用centos5.6及以上的系统，默认使用AES-256来加密的。这就需要集群中的所有节点上安装JCE.&lt;br>
打开&lt;a class="link" href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener"
>http://www.oracle.com/technetwork/java/javase/downloads/index.html&lt;/a>, 下载jdk对应的JCE文件.&lt;br>
解压后的文件放入&lt;code>${JAVA_HOME}/jre/lib/security/&lt;/code>中.&lt;/p>
&lt;h2 id="kerberos的基础使用">Kerberos的基础使用&lt;/h2>
&lt;h3 id="yarn配置">Yarn配置&lt;/h3>
&lt;p>打开Cloudera Manager的Yarn配置页面, 搜索min.user, 修改为0, 然后按提示重启Yarn.&lt;br>
使用Kerberos需要新建一些用户, 其id可能小于1000, 使用Yarn的默认配置可能会导致一些用户不能提交Yarn任务.&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/yarn.png"
width="1880"
height="1048"
srcset="https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/yarn_hu8c2909963a12b977c7fae31cbd96c112_53756_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Kerberos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/yarn_hu8c2909963a12b977c7fae31cbd96c112_53756_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="179"
data-flex-basis="430px"
>&lt;/p>
&lt;h3 id="导出keytab">导出keytab&lt;/h3>
&lt;p>进入cdh1, 输入&lt;code>kadmin.local&lt;/code>, 输入以下命令:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xst -k /path/to/*.keytab -norandkey &amp;lt;principal&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中principal为需要导出keytab的用户名, 如hbase/cdh2, 注意-norandkey参数不可缺少, 否则可能会导致重新生成密码, 导致keytab失效.&lt;br>
导出的keytab的效用等同账号密码, 请注意妥善保管.&lt;/p>
&lt;h3 id="以某个kerberos用户登录">以某个Kerberos用户登录&lt;/h3>
&lt;p>两种方法:&lt;/p>
&lt;ol>
&lt;li>&lt;code>kinit 用户名@域名&lt;/code>, 输入密码;&lt;/li>
&lt;li>&lt;code>kinit 用户名@域名 -k -t 对应keytab文件&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>后者无需输入密码, 适合在脚本中使用.&lt;br>
一些组件对Kerberos的令牌有限制, 需要登录对应用户后才能使用, 包括HDFS的文件访问控制, 需要在Kerberos中建立对应的用户.&lt;/p>
&lt;h3 id="创建kerberos用户">创建Kerberos用户&lt;/h3>
&lt;p>前面已经使用过了, 进入cdh1, 输入&lt;code>kadmin.local&lt;/code>, 输入以下命令:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>addprinc 用户名@域名
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">## 按提示设置管理账号的密码并重复密码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Sentry部署,配置与使用</title><link>https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 07 Mar 2018 16:23:22 +0800</pubDate><guid>https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/summer.jpg" alt="Featured image of post Sentry部署,配置与使用" />&lt;p>最近在CDH集群部署Sentry和Kerberos遇到了不少坑, 把过程总结一下, 都放上来吧.&lt;/p>
&lt;h2 id="sentry组件安装">Sentry组件安装&lt;/h2>
&lt;p>进入Cloudera Manager页面, 点击集群名右边的倒三角按钮, 选择&amp;quot;添加服务&amp;quot;:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/add.png"
width="844"
height="478"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/add_huc0b99d23dde631907b537bf95a0319d0_11156_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/add_huc0b99d23dde631907b537bf95a0319d0_11156_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="423px"
>&lt;br>
选择Sentry组件, 点击&amp;quot;继续&amp;quot;:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addSentry.png"
width="2422"
height="530"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addSentry_hu71bcaa3408fb3e02ca5f307a4516805a_48368_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addSentry_hu71bcaa3408fb3e02ca5f307a4516805a_48368_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="456"
data-flex-basis="1096px"
>&lt;br>
选择集群主节点作为Sentry Server, 选择所有节点为Gateway, 然后点击&amp;quot;继续&amp;quot;:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/selectServer.png"
width="1596"
height="468"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/selectServer_hu1561b49df4de1a4512187ef712b567b8_29750_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/selectServer_hu1561b49df4de1a4512187ef712b567b8_29750_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="341"
data-flex-basis="818px"
>&lt;br>
在集群元数据MySQL中执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">create&lt;/span> &lt;span style="color:#815ba4">database&lt;/span> sentry &lt;span style="color:#815ba4">default&lt;/span> character &lt;span style="color:#815ba4">set&lt;/span> utf8 &lt;span style="color:#815ba4">default&lt;/span> &lt;span style="color:#815ba4">collate&lt;/span> utf8_general_ci;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">grant&lt;/span> &lt;span style="color:#815ba4">all&lt;/span> &lt;span style="color:#815ba4">on&lt;/span> sentry.&lt;span style="color:#5bc4bf">*&lt;/span> &lt;span style="color:#815ba4">to&lt;/span> &lt;span style="color:#48b685">&amp;#39;sentry&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">@&lt;/span>&lt;span style="color:#48b685">&amp;#39;%&amp;#39;&lt;/span> identified &lt;span style="color:#815ba4">by&lt;/span> &lt;span style="color:#48b685">&amp;#39;sentrypassword&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建Sentry所需的数据库, 然后在Sentry安装页面中填上MySQL的地址账号密码, 点击继续, 等待安装和首次启动完毕.&lt;/p>
&lt;h2 id="sentry及相关组件配置">Sentry及相关组件配置&lt;/h2>
&lt;h3 id="hue配置">Hue配置&lt;/h3>
&lt;p>进入Hue配置, 找到&amp;quot;Sentry 服务&amp;quot;, 选择Sentry:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHue.png"
width="970"
height="160"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHue_huddb9b871f0d068303146905e0f4d8291_3928_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHue_huddb9b871f0d068303146905e0f4d8291_3928_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="606"
data-flex-basis="1455px"
>&lt;/p>
&lt;h2 id="hive配置">Hive配置&lt;/h2>
&lt;p>进入Hive配置, 找到&amp;quot;Sentry 服务&amp;quot;, 选择Sentry:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive1.png"
width="946"
height="170"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive1_hu641b9b64e8f2f3de50783ed177ccf2c9_4084_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive1_hu641b9b64e8f2f3de50783ed177ccf2c9_4084_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="556"
data-flex-basis="1335px"
>&lt;br>
找到&amp;quot;HiveServer2 启用模拟&amp;quot;, 取消勾选:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive2.png"
width="1136"
height="128"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive2_hu3da2be25e9f7490b486730954d6f40b5_6992_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive2_hu3da2be25e9f7490b486730954d6f40b5_6992_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="887"
data-flex-basis="2130px"
>&lt;br>
找到&amp;quot;sentry-site.xml 的 Hive 服务高级配置代码段（安全阀）&amp;quot;, 增加&lt;code>sentry.hive.testing.mode&lt;/code>属性, 值为&lt;code>true&lt;/code>:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive3.png"
width="1558"
height="418"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive3_hu311c356bdaa4e60a0f13ab6a6457bb33_10980_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHive3_hu311c356bdaa4e60a0f13ab6a6457bb33_10980_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="372"
data-flex-basis="894px"
>&lt;/p>
&lt;h3 id="impala配置">Impala配置&lt;/h3>
&lt;p>注: 需要确认集群每个节点都安装了Impala Daemon服务;如果Impala启动时提示cannot read or execute the parent directory of dfs.domain.socket.path, 则HDFS配置的dfs.client.read.shortcircuit勾选上, 并创建dfs.domain.socket.path的目录.&lt;br>
进入Impala配置, 找到&amp;quot;Sentry 服务&amp;quot;, 选择Sentry:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setImpala.png"
width="1008"
height="180"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setImpala_hu51c1747fd172fc43081df8420f271252_4268_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setImpala_hu51c1747fd172fc43081df8420f271252_4268_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="560"
data-flex-basis="1344px"
>&lt;/p>
&lt;h3 id="hdfs配置">HDFS配置&lt;/h3>
&lt;p>进入HDFS配置, 找到&amp;quot;启用访问控制列表 dfs.namenode.acls.enabled&amp;quot;, 勾选:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHdfs.png"
width="1032"
height="114"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHdfs_hu3b0e990228748f4b3a91fa73898a15ec_4978_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/setHdfs_hu3b0e990228748f4b3a91fa73898a15ec_4978_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="905"
data-flex-basis="2172px"
>&lt;/p>
&lt;h3 id="重启集群">重启集群&lt;/h3>
&lt;p>Cloudera Manager会提示过期配置需要重启组件, 点击黄色圆形箭头, 点击&amp;quot;重启过时服务&amp;quot;, 并等待重启完成:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/change.png"
width="742"
height="1202"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/change_hudac6d6a8132b5ae7cce3acf822283987_27474_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/change_hudac6d6a8132b5ae7cce3acf822283987_27474_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="61"
data-flex-basis="148px"
>&lt;/p>
&lt;h2 id="hue用户权限配置">Hue用户权限配置&lt;/h2>
&lt;h3 id="前提">前提&lt;/h3>
&lt;p>Hue的用户权限体系是: 每个用户属于一个或多个组, 每个组可以配置其Hue页面访问权限及Hive/Solr/HDFS数据访问权限, 数据的访问权限由角色定义, 而用户组和角色之间是多对多关系.&lt;br>
Hue使用Sentry进行权限管理之后, 要求登录Hue的用户及其组需要在Sentry Server节点(以正式环境为例, 即gs01节点)Linux系统中存在对应的用户和组, 否则无法进行权限控制.&lt;br>
目前已经在Hue创建了一个hdfs用户组(拥有最高权限), 包含用户admin及hdfs, 两者在gs01节点Linux系统中均存在. hdfs用户的存在主要考虑到Spark程序通过hue的oozie工作流提交时, 保证其执行权限.&lt;br>
下文假定需要建立一个用户组hiveselect和用户hive1, 允许登录, 拥有部分hive表的select权限.&lt;/p>
&lt;h3 id="创建linux用户">创建Linux用户&lt;/h3>
&lt;p>ssh登录gs01节点, 执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>groupadd hiveselect
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>useradd -f hiveselect hive1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>P.S. 上面命令建立的用户是没有密码的, 需要密码或其他选项的请自行添加参数.&lt;/p>
&lt;h3 id="创建hue用户">创建Hue用户&lt;/h3>
&lt;p>使用admin或hdfs用户登录Hue, 点击右上角用户名, 选择&amp;quot;Manage users&amp;quot;:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser.png"
width="446"
height="324"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser_hu504f2689fd0a898237e09ec7be11f7a8_6242_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser_hu504f2689fd0a898237e09ec7be11f7a8_6242_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="137"
data-flex-basis="330px"
>&lt;br>
点击&amp;quot;Group&amp;quot;选项卡, 点击&amp;quot;Add Group&amp;quot;按钮, &amp;ldquo;Name&amp;quot;填Linux的组名&amp;quot;hiveselect&amp;rdquo;, &amp;ldquo;members&amp;quot;为该组用户, 可以后期选择, &amp;ldquo;permissions&amp;quot;是该组用户的Hue页面访问权限, 其中&amp;quot;beeswax.access:Launch this application(2)&amp;ldquo;必选; 如果需要hive查询, 则需要选择&amp;quot;metadata.access:Launch this application(23)&amp;ldquo;和&amp;quot;metastore.access:Launch this application(12)&amp;rdquo;, 其他组件请根据具体需求而勾选:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addGroup1.png"
width="2058"
height="426"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addGroup1_hu0e94cd056a87e61551acccec8e8c4a1b_19824_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addGroup1_hu0e94cd056a87e61551acccec8e8c4a1b_19824_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="483"
data-flex-basis="1159px"
>&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addGroup2.png"
width="1630"
height="1484"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addGroup2_hu0201b2a533c6dc3c455a702c91ef4dfa_32918_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addGroup2_hu0201b2a533c6dc3c455a702c91ef4dfa_32918_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="109"
data-flex-basis="263px"
>&lt;br>
然后点击&amp;quot;Add group&amp;quot;按钮增加组.&lt;/p>
&lt;p>随后点击&amp;quot;Users&amp;quot;选项卡, 点击&amp;quot;Add user&amp;quot;按钮, Step 1填用户名(与Linux用户名一致)和Hue登录密码, Step 2选择所属用户组为&amp;quot;hiveselect&amp;rdquo;(与Linux用户组一致), 最后点击&amp;quot;Add user&amp;quot;按钮:
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser1.png"
width="2002"
height="342"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser1_hu53755ed6163210200dadcf90ac68d272_13536_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser1_hu53755ed6163210200dadcf90ac68d272_13536_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="585"
data-flex-basis="1404px"
>&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser2.png"
width="1138"
height="592"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser2_huafb58769bb3a4a402249e03fe66bedde_16000_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser2_huafb58769bb3a4a402249e03fe66bedde_16000_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser3.png"
width="1134"
height="970"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser3_hu1a14d567fa49eb4b36fbe4d2e0688003_17858_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addUser3_hu1a14d567fa49eb4b36fbe4d2e0688003_17858_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="116"
data-flex-basis="280px"
>&lt;/p>
&lt;h3 id="配置角色权限">配置角色权限&lt;/h3>
&lt;p>点击左上角≡按钮, 再点击&amp;quot;Security&amp;rdquo;, 选择Hive Tables选项卡, 进行Hive访问权限配置.&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/menu.png"
width="554"
height="984"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/menu_hu09ed838551ac7e0c9b8d6dab7f40a8e7_10854_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/menu_hu09ed838551ac7e0c9b8d6dab7f40a8e7_10854_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="56"
data-flex-basis="135px"
>&lt;br>
左侧选择Roles, 点击右边的&amp;quot;Add&amp;quot;按钮, &amp;ldquo;Name&amp;quot;中填写角色名, 可随意填写, &amp;ldquo;Groups&amp;quot;选择需要授予该角色的用户组, 此处选择了我们现在要处理的hiveselect用户组, &amp;ldquo;Privileges&amp;quot;中点击加号, 增加权限, 可以填写权限类型(select/insert/all), 及对应权限的库/表/列, 一个角色可以增加多条权限规则:&lt;br>
&lt;img src="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addRole.png"
width="2094"
height="828"
srcset="https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addRole_hu99d195eb2dd894836bad9caf7521805b_16790_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/Sentry%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/addRole_hu99d195eb2dd894836bad9caf7521805b_16790_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="252"
data-flex-basis="606px"
>&lt;br>
填写完毕之后, 点击Save按钮, 稍等片刻即可生效(按目前经验来看, 新增的组可能需要3-5分钟才能生效, 已经配置过的组修改访问权限的话几乎是立刻生效).&lt;/p>
&lt;h3 id="hive最高权限">Hive最高权限&lt;/h3>
&lt;p>Hue中配置的Hive权限是针对表的读写权限的, 并没有涉及到建库建表的权限, 使用管理员用户可以赋予该权限, 进入hue
的Hive编辑器, 执行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">grant&lt;/span> &lt;span style="color:#815ba4">all&lt;/span> &lt;span style="color:#815ba4">on&lt;/span> server server1 &lt;span style="color:#815ba4">to&lt;/span> &lt;span style="color:#815ba4">role&lt;/span> hue角色名;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>