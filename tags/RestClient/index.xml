<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RestClient on Heaven's Door</title><link>https://leibnizhu.github.io/tags/RestClient/</link><description>Recent content in RestClient on Heaven's Door</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 10 Mar 2023 13:17:21 +0800</lastBuildDate><atom:link href="https://leibnizhu.github.io/tags/RestClient/index.xml" rel="self" type="application/rss+xml"/><item><title>Quarkus RestClient路径参数URL编码问题</title><link>https://leibnizhu.github.io/p/Quarkus-RestClient%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0URL%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 10 Mar 2023 13:17:21 +0800</pubDate><guid>https://leibnizhu.github.io/p/Quarkus-RestClient%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0URL%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</guid><description>&lt;img src="https://leibnizhu.github.io/p/Quarkus-RestClient%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0URL%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/thumbnail.jpg" alt="Featured image of post Quarkus RestClient路径参数URL编码问题" />&lt;p>问题比较简单，简单记录下。&lt;/p>
&lt;p>当我们在Quarkus中使用他的 &lt;a class="link" href="https://cn.quarkus.io/guides/rest-client" target="_blank" rel="noopener"
>RestClient&lt;/a>，恩其实主要是用RestEasy client，声明了一个带路径参数的API，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">@Path&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;/path&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">@RegisterRestClient&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#815ba4">interface&lt;/span> &lt;span style="color:#fec418">SomeApi&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@GET&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Path&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;/to/{id}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#06b6ef">getSomething&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#5bc4bf">@PathParam&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> String id&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果路径参数的取值带有 &lt;code>&amp;quot;/&amp;quot;&lt;/code> ，而该服务要求对这种参数进行URL编码，以免被其他endpoint接收，这时候会发现，如果传入未URL编码的id，如 &lt;code>&amp;quot;aaa/bbb&amp;quot;&lt;/code>，实际发出的请求为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>GET /path/to/aaa/bbb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时该API可能无法正常工作（比如，有另一个 &lt;code>&amp;quot;/path/to/{id}/bbb&amp;quot;&lt;/code> 的接口）。如果传入已URL编码的id，如 &lt;code>&amp;quot;aaa％2Fbbb&amp;quot;&lt;/code>，实际发出的请求为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>GET /path/to/aaa%252Fbbb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里是RestEasy client将 &lt;code>%&lt;/code> 字符进行了URL编码变成 &lt;code>%25&lt;/code>，而 &lt;code>2F&lt;/code> 当作普通字符未处理。而该API要求传入 &lt;code>GET /path/to/aaa%2Fbbb&lt;/code> 才能正常工作。&lt;/p>
&lt;p>因为在quarkus的github中没搜到相关issue，所以直接看代码。&lt;/p>
&lt;p>经过调试，发现 &lt;code>RestClient&lt;/code> 是在 &lt;code>org.jboss.resteasy.client.jaxrs.internal.proxy.processors.ProcessorFactory#createProcessor()&lt;/code> 方法对路径参数进行处理的创建 &lt;code>PathParamProcessor&lt;/code> 实例的，具体过程：&lt;/p>
&lt;ol>
&lt;li>&lt;code>ProcessorFactory#createProcessor&lt;/code> 根据 &lt;code>@PathParam&lt;/code> 注解创建 &lt;code>PathParamProcessor&lt;/code> 实例，如果同时还有 &lt;code>@Encoded&lt;/code> 注解控制是否URL编码&lt;/li>
&lt;li>&lt;code>org.jboss.resteasy.client.jaxrs.internal.proxy.processors.webtarget.PathParamProcessor#build&lt;/code> 方法创建 &lt;code>ResteasyWebTarget&lt;/code> 实例&lt;/li>
&lt;li>&lt;code>PathParamProcessor#build&lt;/code> 方法里面会调用 &lt;code>org.jboss.resteasy.specimpl.ResteasyUriBuilderImpl#resolveTemplate()&lt;/code> 方法创建 &lt;code>UriBuilder&lt;/code> 实例，这里会调用 &lt;code>ResteasyUriBuilderImpl#replaceParameter&lt;/code> 方法将实际传入参数构建uri&lt;/li>
&lt;li>&lt;code>replaceParameter&lt;/code> 方法先从调用的参数Map获取当前要替换的参数，如果需要对 &lt;code>'/'&lt;/code> 编码，也就是说有 &lt;code>@Encoded&lt;/code> 注解，则调用 &lt;code>org.jboss.resteasy.util.Encode.encodePathSegmentAsIs&lt;/code> 方法进行编码，否则使用 &lt;code>org.jboss.resteasy.util.Encode#encodePathAsIs&lt;/code> 进行编码。&lt;/li>
&lt;li>&lt;code>encodePathSegmentAsIs&lt;/code> 和 &lt;code>Encode#encodePathAsIs&lt;/code> 方法最终都是调用 &lt;code>Encode#encodeFromArray&lt;/code>方法，区别在于传入的编码Map，前者传入 &lt;code>pathEncoding&lt;/code>，后者传入 &lt;code>pathSegmentEncoding&lt;/code>；&lt;/li>
&lt;li>在 &lt;code>Encode&lt;/code> 的静态代码块里，对 &lt;code>pathEncoding&lt;/code> 和 &lt;code>pathSegmentEncoding&lt;/code> 进行初始化，其中 &lt;code>pathEncoding&lt;/code> 没有 &amp;lsquo;/&amp;rsquo; 的映射，而 &lt;code>pathSegmentEncoding&lt;/code> 特意加入 &amp;lsquo;/&amp;rsquo; 的映射，具体如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> String&lt;span style="color:#5bc4bf">[]&lt;/span> pathEncoding &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> String&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#f99b15">128&lt;/span>&lt;span style="color:#5bc4bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> &lt;span style="color:#815ba4">static&lt;/span> &lt;span style="color:#815ba4">final&lt;/span> String&lt;span style="color:#5bc4bf">[]&lt;/span> pathSegmentEncoding &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> String&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#f99b15">128&lt;/span>&lt;span style="color:#5bc4bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">static&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">for&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#fec418">int&lt;/span> i &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#f99b15">0&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span> i &lt;span style="color:#5bc4bf">&amp;lt;&lt;/span> &lt;span style="color:#f99b15">128&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span> i&lt;span style="color:#5bc4bf">++)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>i &lt;span style="color:#5bc4bf">&amp;gt;=&lt;/span> &lt;span style="color:#48b685">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#5bc4bf">&amp;amp;&amp;amp;&lt;/span> i &lt;span style="color:#5bc4bf">&amp;lt;=&lt;/span> &lt;span style="color:#48b685">&amp;#39;z&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">continue&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>i &lt;span style="color:#5bc4bf">&amp;gt;=&lt;/span> &lt;span style="color:#48b685">&amp;#39;A&amp;#39;&lt;/span> &lt;span style="color:#5bc4bf">&amp;amp;&amp;amp;&lt;/span> i &lt;span style="color:#5bc4bf">&amp;lt;=&lt;/span> &lt;span style="color:#48b685">&amp;#39;Z&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">continue&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>i &lt;span style="color:#5bc4bf">&amp;gt;=&lt;/span> &lt;span style="color:#48b685">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#5bc4bf">&amp;amp;&amp;amp;&lt;/span> i &lt;span style="color:#5bc4bf">&amp;lt;=&lt;/span> &lt;span style="color:#48b685">&amp;#39;9&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#815ba4">continue&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">switch&lt;/span> &lt;span style="color:#5bc4bf">((&lt;/span>&lt;span style="color:#fec418">char&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> i&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// …………………… 其他跳过的字符省略
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">case&lt;/span> &lt;span style="color:#48b685">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">continue&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathEncoding&lt;span style="color:#5bc4bf">[&lt;/span>i&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> encodeString&lt;span style="color:#5bc4bf">(&lt;/span>String&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">valueOf&lt;/span>&lt;span style="color:#5bc4bf">((&lt;/span>&lt;span style="color:#fec418">char&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> i&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathEncoding&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#48b685">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;%20&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// ……………………
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">arraycopy&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>pathEncoding&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#f99b15">0&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> pathSegmentEncoding&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#f99b15">0&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> pathEncoding&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">length&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathSegmentEncoding&lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#48b685">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;%2F&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// ……………………
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以达到了前面说的效果。&lt;/p>
&lt;p>根据代码分析，只要给路径参数加上 &lt;code>@Encoded&lt;/code> 注解即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">@Path&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;/path&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">@RegisterRestClient&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#815ba4">interface&lt;/span> &lt;span style="color:#fec418">SomeApi&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@GET&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Path&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;/to/{id}&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#06b6ef">getSomething&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#5bc4bf">@PathParam&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">@Encoded&lt;/span> String id&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>翻完代码，再想起来可以看看RestEasy的文档，发现其实有写的：&lt;a class="link" href="https://docs.jboss.org/resteasy/docs/4.7.7.Final/userguide/html/_Encoded_and_encoding.html" target="_blank" rel="noopener"
>RestEasy4.7.7.Final UserGuide Chapter 16. @Encoded and encoding&lt;/a> 。&lt;/p></description></item></channel></rss>