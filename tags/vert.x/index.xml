<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vert.x on Heaven's Door</title><link>https://leibnizhu.github.io/tags/vert.x/</link><description>Recent content in vert.x on Heaven's Door</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 30 Jan 2018 14:02:10 +0800</lastBuildDate><atom:link href="https://leibnizhu.github.io/tags/vert.x/index.xml" rel="self" type="application/rss+xml"/><item><title>基于Vert.X的高性能微信支付宝公众号通用服务</title><link>https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/</link><pubDate>Tue, 30 Jan 2018 14:02:10 +0800</pubDate><guid>https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/</guid><description>&lt;img src="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/drink.jpg" alt="Featured image of post 基于Vert.X的高性能微信支付宝公众号通用服务" />&lt;p>去年基于&lt;code>Vert.X&lt;/code>写了一个微信支付宝公众号通用服务，放在&lt;code>Github&lt;/code>上，也有一段时间没维护了，现在把文档发上来记录一下吧。&lt;br>
&lt;code>Github&lt;/code>地址：&lt;a class="link" href="https://github.com/Leibnizhu/AlipayWechatPlatform" target="_blank" rel="noopener"
>https://github.com/Leibnizhu/AlipayWechatPlatform&lt;/a>&lt;/p>
&lt;h1 id="alipay-wechat-platform">Alipay-Wechat-Platform&lt;/h1>
&lt;p>&lt;img src="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/logo.png"
width="256"
height="90"
srcset="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/logo_hu5b25fb5b6f99f55f2eb318444d1f5940_6648_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/logo_hu5b25fb5b6f99f55f2eb318444d1f5940_6648_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="284"
data-flex-basis="682px"
>&lt;/p>
&lt;h2 id="命名">命名&lt;/h2>
&lt;p>原来命名是Wechat-Alipay-Platform，但这样缩写WAP、可能引起歧义，所以改成Alipay-Wechat-Platform，缩写AWP（还是有歧义，但至少不是一个领域的）。&lt;/p>
&lt;h2 id="意义">意义&lt;/h2>
&lt;p>本项目旨在减少Web项目关于微信、支付宝的重复代码，以及解决公众号的安全域名只能配置一个的问题。&lt;br>
未来还可以托管Access Token。
本项目部署后，将公众号安全域名配置到本项目的域名，此后多个web项目（不同域名）可以使用同一个公众号 &lt;del>（理论上）&lt;/del> 。&lt;/p>
&lt;h2 id="技术栈">技术栈&lt;/h2>
&lt;h3 id="变迁">变迁&lt;/h3>
&lt;p>原来：&lt;code>Vue.js + Spring Boot + Druid + MySQL&lt;/code>&lt;br>
现在：&lt;code>Vue.js + Vert.X(Core+Web+JDBC) + HikariCP + MySQL(可能换成PostgreSQL)&lt;/code>&lt;/p>
&lt;h3 id="benchmark">Benchmark&lt;/h3>
&lt;p>针对支付配置获取的API进行测试。&lt;/p>
&lt;ul>
&lt;li>测试工具：&lt;code>Jemeter3.2 r1790748&lt;/code>&lt;/li>
&lt;li>测试环境：&lt;code>Manjaro 17.0.5 x86_64 Linux 4.9.53-1-MANJARO&lt;/code>,&lt;code>OpenJDK 1.8.0_144&lt;/code>&lt;/li>
&lt;li>硬件配置：Intel Core i7-6560U @ 4x 3.2GHz, 8G DDR3, 256G SSD&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>&lt;code>Spring&lt;/code>(无Shiro过滤)测试结果：&lt;br>
&lt;img src="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/spring.png"
width="1494"
height="58"
srcset="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/spring_hu7082302d019b96b728a530f2e71c351c_12820_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/spring_hu7082302d019b96b728a530f2e71c351c_12820_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="2575"
data-flex-basis="6182px"
>&lt;/li>
&lt;li>&lt;code>Vert.X&lt;/code>(JWT授权+MariaDB)测试结果：&lt;br>
&lt;img src="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/vertx.png"
width="1496"
height="61"
srcset="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/vertx_hu63d50766faf3540da712763e1beb3336_12843_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/vertx_hu63d50766faf3540da712763e1beb3336_12843_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="2452"
data-flex-basis="5885px"
>&lt;/li>
&lt;li>&lt;code>Vert.X&lt;/code>(JWT授权+PostgreSQL)测试结果：&lt;br>
&lt;img src="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/vertx_postgres.png"
width="1184"
height="55"
srcset="https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/vertx_postgres_hu410f5425beb1e3a5a5ab067aa28ea7f6_12201_480x0_resize_box_3.png 480w, https://leibnizhu.github.io/p/%E5%9F%BA%E4%BA%8EVert.X%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E5%85%AC%E4%BC%97%E5%8F%B7%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1/vertx_postgres_hu410f5425beb1e3a5a5ab067aa28ea7f6_12201_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="2152"
data-flex-basis="5166px"
>&lt;/li>
&lt;/ol>
&lt;h2 id="maven子模块">Maven子模块&lt;/h2>
&lt;ul>
&lt;li>&lt;code>awp-base&lt;/code>: PoJo类，工具类（通用工具、微信工具、支付宝工具）&lt;/li>
&lt;li>&lt;code>awp-final&lt;/code>: 最终打成Vert.X整合包，包括后台管理和服务的入口&lt;/li>
&lt;li>&lt;code>awp-verticle-bms&lt;/code>: 后台管理页面，需要JWT授权登录&lt;/li>
&lt;li>&lt;code>awp-verticle-base&lt;/code>: Verticle基础通用类，包括一个基础接口机器抽象类，以及定义EventBus常量的命名空间&lt;/li>
&lt;li>&lt;code>awp-verticle-db&lt;/code>: 数据库相关类&lt;/li>
&lt;li>&lt;code>awp-verticle-message&lt;/code>: 微信、支付宝(模板/客服/图文)消息发送服务(TODO)&lt;/li>
&lt;li>&lt;code>awp-verticle-oauth&lt;/code>: 微信、支付宝(TODO)授权服务&lt;/li>
&lt;li>&lt;code>awp-verticle-pay&lt;/code>: 微信、支付宝支付服务(TODO)&lt;/li>
&lt;/ul>
&lt;h2 id="启动方式">启动方式&lt;/h2>
&lt;h3 id="增加支付宝maven依赖">增加支付宝Maven依赖&lt;/h3>
&lt;p>进入项目目录，执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mvn install:install-file -Dfile&lt;span style="color:#5bc4bf">=&lt;/span>dependencies/com.alipay.api-1.0.jar -DgroupId&lt;span style="color:#5bc4bf">=&lt;/span>com.alipay -DartifactId&lt;span style="color:#5bc4bf">=&lt;/span>api -Dversion&lt;span style="color:#5bc4bf">=&lt;/span>1.0 -Dpackaging&lt;span style="color:#5bc4bf">=&lt;/span>jar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mvn install:install-file -Dfile&lt;span style="color:#5bc4bf">=&lt;/span>dependencies/com.antgroup.zmxy.openplatform-1.0.jar -DgroupId&lt;span style="color:#5bc4bf">=&lt;/span>com.antgroup -DartifactId&lt;span style="color:#5bc4bf">=&lt;/span>zmxy.openplatform -Dversion&lt;span style="color:#5bc4bf">=&lt;/span>1.0 -Dpackaging&lt;span style="color:#5bc4bf">=&lt;/span>jar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置文件">配置文件&lt;/h3>
&lt;p>可以放在任何位置，任何文件名，内容参考&lt;code>awp-final/src/main/resources/config.json&lt;/code>。&lt;/p>
&lt;h3 id="命令行启动">命令行启动&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mvn clean &lt;span style="color:#5bc4bf">&amp;amp;&amp;amp;&lt;/span> maven package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>java -jar awp-final/target/awp-0.0.1-SNAPSHOT-fat.jar run com.turingdi.awp.MainVerticle -conf &lt;span style="color:#5bc4bf">[&lt;/span>/path/to/配置文件&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="调试">调试&lt;/h3>
&lt;p>从&lt;code>awp-final&lt;/code>子模块中的&lt;code>com.turingdi.awp.MainLauncher&lt;/code>类启动项目即可，启动参数参考命令行启动的命令（从&lt;code>run&lt;/code>开始）。&lt;/p>
&lt;h2 id="后台管理页面">后台管理页面&lt;/h2>
&lt;p>入口地址：&lt;code>http://localhost:8083/&lt;/code>&lt;/p>
&lt;h2 id="api">API&lt;/h2>
&lt;h3 id="微信授权">微信授权&lt;/h3>
&lt;p>申请微信授权。web服务需要授权时，向用户发送重定向到该接口。&lt;/p>
&lt;ul>
&lt;li>请求地址：&lt;code>http://localhost:8083/oauth/wx/apply/{body}&lt;/code>&lt;/li>
&lt;li>参数：body，格式为变种Base64编码的JSON，请用http://localhost:8083/static/page/sys/base64.html 进行编码&lt;/li>
&lt;/ul>
&lt;p>例如（请修改域名后，在微信打开，静默授权，授权后跳到百度首页(为了展示可以回调到任何地址)，观察地址，rs参数是图灵Base64加密后的结果）: http://localhost:8083/oauth/wx/apply/bgNVIODVIfwpZOI2dADsO3DVIOD3TmLgZSI2KOgxIODVIOkBHCjsHfqB1YI2IfhMTmD2oY60T0cuHfqpZm8uHt6nIVp6OV~~&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;eid&amp;#34;&lt;/span>:&lt;span style="color:#f99b15">1&lt;/span>, &lt;span style="color:#ef6155">/*web项目使用的公众号在本项目中的用户ID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#f99b15">0&lt;/span>,&lt;span style="color:#ef6155">/*0=静默授权，只能获取OpenID，1=正常授权，会弹出授权确认页面，可以获取到用户信息*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;callback&amp;#34;&lt;/span>:&lt;span style="color:#48b685">&amp;#34;http://dict.baidu.com&amp;#34;&lt;/span>&lt;span style="color:#ef6155">/*授权成功后调用的web项目回调接口地址&lt;/span>,&lt;span style="color:#ef6155">请使用完整地址,回调时会使用GET方法，加上rs参数，rs参数值是turingBase64加密的授权结果(JSON)*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="支付宝授权">支付宝授权&lt;/h3>
&lt;p>申请支付宝授权。web服务需要授权时，向用户发送重定向到该接口。&lt;/p>
&lt;ul>
&lt;li>请求地址：&lt;code>http://localhost:8083/oauth/zfb/apply/{body}&lt;/code>&lt;/li>
&lt;li>参数：body，格式为变种Base64编码的JSON，请用http://localhost:8083/static/page/sys/base64.html 进行编码&lt;/li>
&lt;/ul>
&lt;p>例如（请修改域名后打开，静默授权，授权后跳到百度首页(为了展示可以回调到任何地址)，观察地址，rs参数是图灵Base64加密后的结果）: http://localhost:8083/oauth/wx/apply/bgNVIODVIfwpZOI2dADsO3DVIOD3TmLgZSI2KOgxIODVIOkBHCjsHfqB1YI2IfhMTmD2oY60T0cuHfqpZm8uHt6nIVp6OV~~&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;eid&amp;#34;&lt;/span>:&lt;span style="color:#f99b15">1&lt;/span>, &lt;span style="color:#ef6155">/*web项目使用的公众号在本项目中的用户ID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#f99b15">0&lt;/span>,&lt;span style="color:#ef6155">/*0=静默授权，只能获取OpenID，1=正常授权，会弹出授权确认页面，可以获取到用户信息*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;callback&amp;#34;&lt;/span>:&lt;span style="color:#48b685">&amp;#34;http://dict.baidu.com&amp;#34;&lt;/span>&lt;span style="color:#ef6155">/*授权成功后调用的web项目回调接口地址&lt;/span>,&lt;span style="color:#ef6155">请使用完整地址,回调时会使用GET方法，加上rs参数，rs参数值是turingBase64加密的授权结果(JSON)*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="微信公众号的accesstoken与jsticket">微信公众号的AccessToken与JsTicket&lt;/h3>
&lt;h4 id="accesstoken">AccessToken&lt;/h4>
&lt;ul>
&lt;li>请求方法：POST&lt;/li>
&lt;li>来源限制：与awp同网段的访问（通过请求头的&lt;code>X-Forwarded-For&lt;/code>与&lt;code>X-Real-IP&lt;/code>请求头判断，通过nginx反代访问的都会带上）&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/tk/wx/act/{eid}&lt;/code>&lt;/li>
&lt;li>请求参数：eid路径参数，用户ID&lt;/li>
&lt;/ul>
&lt;h4 id="jsticket">JsTicket&lt;/h4>
&lt;ul>
&lt;li>请求方法：POST&lt;/li>
&lt;li>来源限制：与awp同网段的访问（通过请求头的&lt;code>X-Forwarded-For&lt;/code>与&lt;code>X-Real-IP&lt;/code>请求头判断，通过nginx反代访问的都会带上）&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/tk/wx/jst/{eid}&lt;/code>&lt;/li>
&lt;li>请求参数：eid路径参数，用户ID&lt;/li>
&lt;/ul>
&lt;h3 id="微信支付">微信支付&lt;/h3>
&lt;p>微信支付相对比较麻烦，单次支付涉及到多个接口。&lt;br>
具体的应用可以参考&lt;code>awp-verticle-admin/resources/static/page/paytest.html&lt;/code>页面的例子。&lt;br>
P.S. 支付的页面需要引入&lt;code>https://res.wx.qq.com/open/js/jweixin-1.2.0.js&lt;/code>。&lt;/p>
&lt;h4 id="预处理wxconfig用">预处理(wx.config用)&lt;/h4>
&lt;ul>
&lt;li>请求方法：GET，由页面AJAX调用&lt;/li>
&lt;li>来源限制：暂无&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/pay/wx/pre/{eid}/{url}&lt;/code>&lt;/li>
&lt;li>请求参数：eid:路径参数，用户ID; url:当前页面URL，请将完整URL进行URL编码再发送&lt;/li>
&lt;li>响应格式：JSON&lt;/li>
&lt;li>响应内容：appId，timestamp（生成签名的时间戳），noncestr（生成签名的随机串），signture（签名），由&lt;code>wx.config()&lt;/code>使用。&lt;/li>
&lt;/ul>
&lt;h4 id="下单">下单&lt;/h4>
&lt;ul>
&lt;li>请求方法：POST，由页面AJAX调用&lt;/li>
&lt;li>来源限制：暂无&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/pay/wx/order&lt;/code>&lt;/li>
&lt;li>请求参数：JSON格式的字符串，包括以下参数：eid(企业用户ID),orderId(本地订单ID),openId(用户OpenID),price(价格，单位：分),name(产品名),callback(支付成功后回调接口，请填写完整URL，无需编码)&lt;/li>
&lt;li>响应格式：JSON&lt;/li>
&lt;li>响应内容：appId,timestamp（生成签名的时间戳），noncestr（生成签名的随机串）,packages(prepay_id),paysign(签名)。供&lt;code>WeixinJSBridge.invoke('getBrandWCPayRequest',{})&lt;/code>使用&lt;/li>
&lt;/ul>
&lt;h4 id="退款">退款&lt;/h4>
&lt;p>(TODO)&lt;/p>
&lt;h3 id="支付宝支付">支付宝支付&lt;/h3>
&lt;h4 id="下单-1">下单&lt;/h4>
&lt;p>需要使用支付宝支付时，由由用户调用此接口（可以是web服务返回重定向到本接口，或后台计算出接口地址，让js跳转）。&lt;/p>
&lt;ul>
&lt;li>请求地址：&lt;code>http://localhost:8083/pay/zfb/order/{body}&lt;/code>&lt;/li>
&lt;li>参数：body，格式为变种Base64编码的JSON，请用http://localhost:8083/static/sys/page/base64.html 进行编码。&lt;/li>
&lt;/ul>
&lt;p>例如(如: http://localhost:8083/pay/zfb/order/bYkL1CX3PB7sIf6YZGwYSCX3P3IjKBKjKBKMdEH0POIsIWJY1CdLIBNjoOkuHCyLIBN32Iu55p2cI3g3HtqsvGkhHts3P3kNTmigP3Q-ZGLBTO53HCL9TS5BvtM3oOkzTCdBZedzIBN31miMcAN-otj-Htqs1G6zTAN4KAVzo0dMHeipHY6gHCTLo0d5cY63HedLdBXu1minvOk6&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;eid&amp;#34;&lt;/span>:&lt;span style="color:#f99b15">1&lt;/span>,&lt;span style="color:#ef6155">/*web项目使用的公众号在本项目中的用户ID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;orderId&amp;#34;&lt;/span>:&lt;span style="color:#48b685">&amp;#34;1231234567&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*本地订单ID，请保持唯一性*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;price&amp;#34;&lt;/span>:&lt;span style="color:#f99b15">1&lt;/span>,&lt;span style="color:#ef6155">/*价格，单位：分*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#48b685">&amp;#34;苹果&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*产品名称*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;callback&amp;#34;&lt;/span>:&lt;span style="color:#48b685">&amp;#34;http://dict.baidu.com&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*支付成功后异步回调地址，将会带上支付宝回调的所有参数*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;success&amp;#34;&lt;/span>:&lt;span style="color:#48b685">&amp;#34;http://localhost:8083/static/page/sys/base64.html&amp;#34;&lt;/span>&lt;span style="color:#ef6155">/*支付后前段立即跳转的地址*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="退款-1">退款&lt;/h4>
&lt;p>(TODO)&lt;/p>
&lt;h3 id="客服模板消息发送">(客服/模板)消息发送&lt;/h3>
&lt;h4 id="微信客服消息">微信客服消息&lt;/h4>
&lt;ul>
&lt;li>请求方法：PUT&lt;/li>
&lt;li>来源限制：与awp同网段的访问（通过请求头的&lt;code>X-Forwarded-For&lt;/code>与&lt;code>X-Real-IP&lt;/code>请求头判断，通过nginx反代访问的都会带上）&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/msg/wx/kf&lt;/code>&lt;/li>
&lt;li>请求参数：JSON格式，无需编码，详见&lt;code>请求提示例&lt;/code>&lt;/li>
&lt;li>响应格式：JSON&lt;/li>
&lt;li>响应内容：微信公众号模板消息接口返回的消息&lt;/li>
&lt;/ul>
&lt;p>请求体示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;eid&amp;#34;&lt;/span>: &lt;span style="color:#f99b15">2&lt;/span>,&lt;span style="color:#ef6155">/*web项目使用的公众号在本项目中的用户ID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;openId&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;of2333333333333333333333OBuk&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*用户OpenID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;content&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;韩寒会画画后悔画韩红&amp;#34;&lt;/span>&lt;span style="color:#ef6155">/*客服消息内容*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>响应体示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;errcode&amp;#34;&lt;/span>: &lt;span style="color:#f99b15">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;errmsg&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;ok&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="微信模板消息">微信模板消息&lt;/h4>
&lt;ul>
&lt;li>请求方法：PUT&lt;/li>
&lt;li>来源限制：与awp同网段的访问（通过请求头的&lt;code>X-Forwarded-For&lt;/code>与&lt;code>X-Real-IP&lt;/code>请求头判断，通过nginx反代访问的都会带上）&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/msg/wx/tp&lt;/code>&lt;/li>
&lt;li>请求参数：JSON格式，无需编码，详见&lt;code>请求体示例&lt;/code>&lt;/li>
&lt;li>响应格式：JSON&lt;/li>
&lt;li>响应内容：微信公众号模板消息接口返回的消息&lt;/li>
&lt;/ul>
&lt;p>请求体示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;eid&amp;#34;&lt;/span>: &lt;span style="color:#f99b15">2&lt;/span>,&lt;span style="color:#ef6155">/*web项目使用的公众号在本项目中的用户ID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;openId&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;of2333333333333333333333OBuk&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*用户OpenID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;tmpId&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;6p233333333333333333333333333333333333333oM&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*模板ID*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;https://www.baidu.com&amp;#34;&lt;/span>,&lt;span style="color:#ef6155">/*模板消息点击后跳转的地址*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;data&amp;#34;&lt;/span>: {&lt;span style="color:#ef6155">/*按模板的字段填写具体的内容*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;first&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;航班延误&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;keyword1&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;AA123&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;keyword2&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;延误&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;keyword3&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;北京-上海&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;keyword4&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;2017-9-21&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;remark&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;韩寒会画画后悔画韩红&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>响应体示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;errcode&amp;#34;&lt;/span>: &lt;span style="color:#f99b15">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;errmsg&amp;#34;&lt;/span>: &lt;span style="color:#48b685">&amp;#34;ok&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">&amp;#34;msgid&amp;#34;&lt;/span>: &lt;span style="color:#f99b15">439631104&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="支付宝客服消息">支付宝客服消息&lt;/h4>
&lt;p>(TODO)&lt;/p>
&lt;h4 id="支付宝模板消息">支付宝模板消息&lt;/h4>
&lt;ul>
&lt;li>请求方法：PUT&lt;/li>
&lt;li>来源限制：与awp同网段的访问（通过请求头的&lt;code>X-Forwarded-For&lt;/code>与&lt;code>X-Real-IP&lt;/code>请求头判断，通过nginx反代访问的都会带上）&lt;/li>
&lt;li>接口地址：&lt;code>http://localhost:8083/msg/zfb/tp&lt;/code>&lt;/li>
&lt;li>请求参数：JSON格式，无需编码，详见&lt;code>请求体示例&lt;/code>&lt;/li>
&lt;li>响应格式：JSON&lt;/li>
&lt;li>响应内容：微信公众号模板消息接口返回的消息&lt;/li>
&lt;/ul>
&lt;p>与微信的类似，示例略。&lt;/p></description></item></channel></rss>